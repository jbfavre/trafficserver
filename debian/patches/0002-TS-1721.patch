From: James Peach <jpeach@apache.org>
Date: Thu, 9 May 2013 03:14:58 +0800
Subject: TS-1721

tstop build integration
---
 build/ax_compare_version.m4 |  177 +++++
 build/ax_lib_curl.m4        |   38 +
 build/ax_path_generic.m4    |  164 +++++
 build/ax_with_curses.m4     |  518 +++++++++++++
 configure.ac                |   14 +
 configure.ac.orig           | 1705 +++++++++++++++++++++++++++++++++++++++++++
 contrib/manifests/debian.pp |    2 +
 contrib/manifests/redhat.pp |    3 +-
 tools/Makefile.am           |   20 +-
 tools/tstop/Makefile        |    5 -
 tools/tstop/stats.h         |   13 +-
 tools/tstop/tstop.cc        |   60 +-
 12 files changed, 2673 insertions(+), 46 deletions(-)
 create mode 100644 build/ax_compare_version.m4
 create mode 100644 build/ax_lib_curl.m4
 create mode 100644 build/ax_path_generic.m4
 create mode 100644 build/ax_with_curses.m4
 create mode 100644 configure.ac.orig
 delete mode 100644 tools/tstop/Makefile

diff --git a/build/ax_compare_version.m4 b/build/ax_compare_version.m4
new file mode 100644
index 0000000..74dc0fd
--- /dev/null
+++ b/build/ax_compare_version.m4
@@ -0,0 +1,177 @@
+# ===========================================================================
+#    http://www.gnu.org/software/autoconf-archive/ax_compare_version.html
+# ===========================================================================
+#
+# SYNOPSIS
+#
+#   AX_COMPARE_VERSION(VERSION_A, OP, VERSION_B, [ACTION-IF-TRUE], [ACTION-IF-FALSE])
+#
+# DESCRIPTION
+#
+#   This macro compares two version strings. Due to the various number of
+#   minor-version numbers that can exist, and the fact that string
+#   comparisons are not compatible with numeric comparisons, this is not
+#   necessarily trivial to do in a autoconf script. This macro makes doing
+#   these comparisons easy.
+#
+#   The six basic comparisons are available, as well as checking equality
+#   limited to a certain number of minor-version levels.
+#
+#   The operator OP determines what type of comparison to do, and can be one
+#   of:
+#
+#    eq  - equal (test A == B)
+#    ne  - not equal (test A != B)
+#    le  - less than or equal (test A <= B)
+#    ge  - greater than or equal (test A >= B)
+#    lt  - less than (test A < B)
+#    gt  - greater than (test A > B)
+#
+#   Additionally, the eq and ne operator can have a number after it to limit
+#   the test to that number of minor versions.
+#
+#    eq0 - equal up to the length of the shorter version
+#    ne0 - not equal up to the length of the shorter version
+#    eqN - equal up to N sub-version levels
+#    neN - not equal up to N sub-version levels
+#
+#   When the condition is true, shell commands ACTION-IF-TRUE are run,
+#   otherwise shell commands ACTION-IF-FALSE are run. The environment
+#   variable 'ax_compare_version' is always set to either 'true' or 'false'
+#   as well.
+#
+#   Examples:
+#
+#     AX_COMPARE_VERSION([3.15.7],[lt],[3.15.8])
+#     AX_COMPARE_VERSION([3.15],[lt],[3.15.8])
+#
+#   would both be true.
+#
+#     AX_COMPARE_VERSION([3.15.7],[eq],[3.15.8])
+#     AX_COMPARE_VERSION([3.15],[gt],[3.15.8])
+#
+#   would both be false.
+#
+#     AX_COMPARE_VERSION([3.15.7],[eq2],[3.15.8])
+#
+#   would be true because it is only comparing two minor versions.
+#
+#     AX_COMPARE_VERSION([3.15.7],[eq0],[3.15])
+#
+#   would be true because it is only comparing the lesser number of minor
+#   versions of the two values.
+#
+#   Note: The characters that separate the version numbers do not matter. An
+#   empty string is the same as version 0. OP is evaluated by autoconf, not
+#   configure, so must be a string, not a variable.
+#
+#   The author would like to acknowledge Guido Draheim whose advice about
+#   the m4_case and m4_ifvaln functions make this macro only include the
+#   portions necessary to perform the specific comparison specified by the
+#   OP argument in the final configure script.
+#
+# LICENSE
+#
+#   Copyright (c) 2008 Tim Toolan <toolan@ele.uri.edu>
+#
+#   Copying and distribution of this file, with or without modification, are
+#   permitted in any medium without royalty provided the copyright notice
+#   and this notice are preserved. This file is offered as-is, without any
+#   warranty.
+
+#serial 11
+
+dnl #########################################################################
+AC_DEFUN([AX_COMPARE_VERSION], [
+  AC_REQUIRE([AC_PROG_AWK])
+
+  # Used to indicate true or false condition
+  ax_compare_version=false
+
+  # Convert the two version strings to be compared into a format that
+  # allows a simple string comparison.  The end result is that a version
+  # string of the form 1.12.5-r617 will be converted to the form
+  # 0001001200050617.  In other words, each number is zero padded to four
+  # digits, and non digits are removed.
+  AS_VAR_PUSHDEF([A],[ax_compare_version_A])
+  A=`echo "$1" | sed -e 's/\([[0-9]]*\)/Z\1Z/g' \
+                     -e 's/Z\([[0-9]]\)Z/Z0\1Z/g' \
+                     -e 's/Z\([[0-9]][[0-9]]\)Z/Z0\1Z/g' \
+                     -e 's/Z\([[0-9]][[0-9]][[0-9]]\)Z/Z0\1Z/g' \
+                     -e 's/[[^0-9]]//g'`
+
+  AS_VAR_PUSHDEF([B],[ax_compare_version_B])
+  B=`echo "$3" | sed -e 's/\([[0-9]]*\)/Z\1Z/g' \
+                     -e 's/Z\([[0-9]]\)Z/Z0\1Z/g' \
+                     -e 's/Z\([[0-9]][[0-9]]\)Z/Z0\1Z/g' \
+                     -e 's/Z\([[0-9]][[0-9]][[0-9]]\)Z/Z0\1Z/g' \
+                     -e 's/[[^0-9]]//g'`
+
+  dnl # In the case of le, ge, lt, and gt, the strings are sorted as necessary
+  dnl # then the first line is used to determine if the condition is true.
+  dnl # The sed right after the echo is to remove any indented white space.
+  m4_case(m4_tolower($2),
+  [lt],[
+    ax_compare_version=`echo "x$A
+x$B" | sed 's/^ *//' | sort -r | sed "s/x${A}/false/;s/x${B}/true/;1q"`
+  ],
+  [gt],[
+    ax_compare_version=`echo "x$A
+x$B" | sed 's/^ *//' | sort | sed "s/x${A}/false/;s/x${B}/true/;1q"`
+  ],
+  [le],[
+    ax_compare_version=`echo "x$A
+x$B" | sed 's/^ *//' | sort | sed "s/x${A}/true/;s/x${B}/false/;1q"`
+  ],
+  [ge],[
+    ax_compare_version=`echo "x$A
+x$B" | sed 's/^ *//' | sort -r | sed "s/x${A}/true/;s/x${B}/false/;1q"`
+  ],[
+    dnl Split the operator from the subversion count if present.
+    m4_bmatch(m4_substr($2,2),
+    [0],[
+      # A count of zero means use the length of the shorter version.
+      # Determine the number of characters in A and B.
+      ax_compare_version_len_A=`echo "$A" | $AWK '{print(length)}'`
+      ax_compare_version_len_B=`echo "$B" | $AWK '{print(length)}'`
+
+      # Set A to no more than B's length and B to no more than A's length.
+      A=`echo "$A" | sed "s/\(.\{$ax_compare_version_len_B\}\).*/\1/"`
+      B=`echo "$B" | sed "s/\(.\{$ax_compare_version_len_A\}\).*/\1/"`
+    ],
+    [[0-9]+],[
+      # A count greater than zero means use only that many subversions
+      A=`echo "$A" | sed "s/\(\([[0-9]]\{4\}\)\{m4_substr($2,2)\}\).*/\1/"`
+      B=`echo "$B" | sed "s/\(\([[0-9]]\{4\}\)\{m4_substr($2,2)\}\).*/\1/"`
+    ],
+    [.+],[
+      AC_WARNING(
+        [illegal OP numeric parameter: $2])
+    ],[])
+
+    # Pad zeros at end of numbers to make same length.
+    ax_compare_version_tmp_A="$A`echo $B | sed 's/./0/g'`"
+    B="$B`echo $A | sed 's/./0/g'`"
+    A="$ax_compare_version_tmp_A"
+
+    # Check for equality or inequality as necessary.
+    m4_case(m4_tolower(m4_substr($2,0,2)),
+    [eq],[
+      test "x$A" = "x$B" && ax_compare_version=true
+    ],
+    [ne],[
+      test "x$A" != "x$B" && ax_compare_version=true
+    ],[
+      AC_WARNING([illegal OP parameter: $2])
+    ])
+  ])
+
+  AS_VAR_POPDEF([A])dnl
+  AS_VAR_POPDEF([B])dnl
+
+  dnl # Execute ACTION-IF-TRUE / ACTION-IF-FALSE.
+  if test "$ax_compare_version" = "true" ; then
+    m4_ifvaln([$4],[$4],[:])dnl
+    m4_ifvaln([$5],[else $5])dnl
+  fi
+]) dnl AX_COMPARE_VERSION
diff --git a/build/ax_lib_curl.m4 b/build/ax_lib_curl.m4
new file mode 100644
index 0000000..198e87a
--- /dev/null
+++ b/build/ax_lib_curl.m4
@@ -0,0 +1,38 @@
+# ===========================================================================
+#        http://www.gnu.org/software/autoconf-archive/ax_lib_curl.html
+# ===========================================================================
+#
+# SYNOPSIS
+#
+#   AX_LIB_CURL([VERSION],[ACTION-IF-SUCCESS],[ACTION-IF-FAILURE])
+#
+# DESCRIPTION
+#
+#   Checks for minimum curl library version VERSION. If successfull executes
+#   ACTION-IF-SUCCESS otherwise ACTION-IF-FAILURE.
+#
+#   Defines CURL_LIBS and CURL_CFLAGS.
+#
+#   A simple example:
+#
+#     AX_LIB_CURL([7.19.4],,[
+#       AC_MSG_ERROR([Your system lacks of libcurl >= 7.19.4])
+#     ])
+#
+#   This macro is a rearranged version of AC_LIB_CURL from Akos Maroy.
+#
+# LICENSE
+#
+#   Copyright (c) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>
+#
+#   Copying and distribution of this file, with or without modification, are
+#   permitted in any medium without royalty provided the copyright notice
+#   and this notice are preserved. This file is offered as-is, without any
+#   warranty.
+
+#serial 7
+
+AU_ALIAS([AC_CHECK_CURL], [AX_LIB_CURL])
+AC_DEFUN([AX_LIB_CURL], [
+  AX_PATH_GENERIC([curl],[$1],['s/^libcurl\ \+//'],[$2],[$3])
+])
diff --git a/build/ax_path_generic.m4 b/build/ax_path_generic.m4
new file mode 100644
index 0000000..351360d
--- /dev/null
+++ b/build/ax_path_generic.m4
@@ -0,0 +1,164 @@
+# ===========================================================================
+#      http://www.gnu.org/software/autoconf-archive/ax_path_generic.html
+# ===========================================================================
+#
+# SYNOPSIS
+#
+#   AX_PATH_GENERIC(LIBRARY,[MINIMUM-VERSION,[SED-EXPR-EXTRACTOR]],[ACTION-IF-FOUND],[ACTION-IF-NOT-FOUND],[CONFIG-SCRIPTS],[CFLAGS-ARG],[LIBS-ARG])
+#
+# DESCRIPTION
+#
+#   Runs the LIBRARY-config script and defines LIBRARY_CFLAGS and
+#   LIBRARY_LIBS unless the user had predefined them in the environment.
+#
+#   The script must support `--cflags' and `--libs' args. If MINIMUM-VERSION
+#   is specified, the script must also support the `--version' arg. If the
+#   `--with-library-[exec-]prefix' arguments to ./configure are given, it
+#   must also support `--prefix' and `--exec-prefix'. Prefereable use
+#   CONFIG-SCRIPTS as config script, CFLAGS-ARG instead of `--cflags` and
+#   LIBS-ARG instead of `--libs`, if given.
+#
+#   The SED-EXPR-EXTRACTOR parameter representes the expression used in sed
+#   to extract the version number. Use it if your 'foo-config --version'
+#   dumps something like 'Foo library v1.0.0 (alfa)' instead of '1.0.0'.
+#
+#   The macro respects LIBRARY_CONFIG, LIBRARY_CFLAGS and LIBRARY_LIBS
+#   variables. If the first one is defined, it specifies the name of the
+#   config script to use. If the latter two are defined, the script is not
+#   ran at all and their values are used instead (if only one of them is
+#   defined, the empty value of the remaining one is still used).
+#
+#   Example:
+#
+#     AX_PATH_GENERIC(Foo, 1.0.0)
+#
+#   would run `foo-config --version' and check that it is at least 1.0.0, if
+#   successful the following variables would be defined and substituted:
+#
+#     FOO_CFLAGS to `foo-config --cflags`
+#     FOO_LIBS   to `foo-config --libs`
+#
+#   Example:
+#
+#     AX_PATH_GENERIC([Bar],,,[
+#        AC_MSG_ERROR([Cannot find Bar library])
+#     ])
+#
+#   would check for bar-config program, defining and substituting the
+#   following variables:
+#
+#     BAR_CFLAGS to `bar-config --cflags`
+#     BAR_LIBS   to `bar-config --libs`
+#
+#   Example:
+#
+#     ./configure BAZ_LIBS=/usr/lib/libbaz.a
+#
+#   would link with a static version of baz library even if `baz-config
+#   --libs` returns just "-lbaz" that would normally result in using the
+#   shared library.
+#
+#   This macro is a rearranged version of AC_PATH_GENERIC from Angus Lees.
+#
+# LICENSE
+#
+#   Copyright (c) 2009 Francesco Salvestrini <salvestrini@users.sourceforge.net>
+#
+#   Copying and distribution of this file, with or without modification, are
+#   permitted in any medium without royalty provided the copyright notice
+#   and this notice are preserved. This file is offered as-is, without any
+#   warranty.
+
+#serial 11
+
+AU_ALIAS([AC_PATH_GENERIC], [AX_PATH_GENERIC])
+AC_DEFUN([AX_PATH_GENERIC],[
+  AC_REQUIRE([AC_PROG_SED])
+
+  dnl we're going to need uppercase and lowercase versions of the
+  dnl string `LIBRARY'
+  pushdef([UP],   translit([$1], [a-z], [A-Z]))dnl
+  pushdef([DOWN], translit([$1], [A-Z], [a-z]))dnl
+
+  AC_ARG_WITH(DOWN-prefix,[AS_HELP_STRING([--with-]DOWN[-prefix=PREFIX], [Prefix where $1 is installed (optional)])],
+    DOWN[]_config_prefix="$withval", DOWN[]_config_prefix="")
+  AC_ARG_WITH(DOWN-exec-prefix,[AS_HELP_STRING([--with-]DOWN[-exec-prefix=EPREFIX], [Exec prefix where $1 is installed (optional)])],
+    DOWN[]_config_exec_prefix="$withval", DOWN[]_config_exec_prefix="")
+
+  AC_ARG_VAR(UP[]_CONFIG, [config script used for $1])
+  AC_ARG_VAR(UP[]_CFLAGS, [CFLAGS used for $1])
+  AC_ARG_VAR(UP[]_LIBS,   [LIBS used for $1])
+
+  AS_IF([test x$UP[]_CFLAGS != x -o x$UP[]_LIBS != x],[
+    dnl Don't run config script at all, use user-provided values instead.
+    AC_SUBST(UP[]_CFLAGS)
+    AC_SUBST(UP[]_LIBS)
+    :
+    $4
+  ],[
+    AS_IF([test x$DOWN[]_config_exec_prefix != x],[
+      DOWN[]_config_args="$DOWN[]_config_args --exec-prefix=$DOWN[]_config_exec_prefix"
+      AS_IF([test x${UP[]_CONFIG+set} != xset],[
+	UP[]_CONFIG=$DOWN[]_config_exec_prefix/bin/DOWN-config
+      ])
+    ])
+    AS_IF([test x$DOWN[]_config_prefix != x],[
+      DOWN[]_config_args="$DOWN[]_config_args --prefix=$DOWN[]_config_prefix"
+      AS_IF([test x${UP[]_CONFIG+set} != xset],[
+	UP[]_CONFIG=$DOWN[]_config_prefix/bin/DOWN-config
+      ])
+    ])
+
+    AC_PATH_PROGS(UP[]_CONFIG,[$6 DOWN-config],[no])
+    AS_IF([test "$UP[]_CONFIG" == "no"],[
+      :
+      $5
+    ],[
+      dnl Get the CFLAGS from LIBRARY-config script
+      AS_IF([test x"$7" == x],[
+	UP[]_CFLAGS="`$UP[]_CONFIG $DOWN[]_config_args --cflags`"
+      ],[
+	UP[]_CFLAGS="`$UP[]_CONFIG $DOWN[]_config_args $7`"
+      ])
+
+      dnl Get the LIBS from LIBRARY-config script
+      AS_IF([test x"$8" == x],[
+	UP[]_LIBS="`$UP[]_CONFIG $DOWN[]_config_args --libs`"
+      ],[
+	UP[]_LIBS="`$UP[]_CONFIG $DOWN[]_config_args $8`"
+      ])
+
+      AS_IF([test x"$2" != x],[
+	dnl Check for provided library version
+	AS_IF([test x"$3" != x],[
+	  dnl Use provided sed expression
+	  DOWN[]_version="`$UP[]_CONFIG $DOWN[]_config_args --version | $SED -e $3`"
+	],[
+	  DOWN[]_version="`$UP[]_CONFIG $DOWN[]_config_args --version | $SED -e 's/^\ *\(.*\)\ *$/\1/'`"
+	])
+
+	AC_MSG_CHECKING([for $1 ($DOWN[]_version) >= $2])
+	AX_COMPARE_VERSION($DOWN[]_version,[ge],[$2],[
+	  AC_MSG_RESULT([yes])
+
+	  AC_SUBST(UP[]_CFLAGS)
+	  AC_SUBST(UP[]_LIBS)
+	  :
+	  $4
+	],[
+	  AC_MSG_RESULT([no])
+	  :
+	  $5
+	])
+      ],[
+	AC_SUBST(UP[]_CFLAGS)
+	AC_SUBST(UP[]_LIBS)
+	:
+	$4
+      ])
+    ])
+  ])
+
+  popdef([UP])
+  popdef([DOWN])
+])
diff --git a/build/ax_with_curses.m4 b/build/ax_with_curses.m4
new file mode 100644
index 0000000..33a37ac
--- /dev/null
+++ b/build/ax_with_curses.m4
@@ -0,0 +1,518 @@
+# ===========================================================================
+#      http://www.gnu.org/software/autoconf-archive/ax_with_curses.html
+# ===========================================================================
+#
+# SYNOPSIS
+#
+#   AX_WITH_CURSES
+#
+# DESCRIPTION
+#
+#   This macro checks whether a SysV or X/Open-compatible Curses library is
+#   present, along with the associated header file.  The NcursesW
+#   (wide-character) library is searched for first, followed by Ncurses,
+#   then the system-default plain Curses.  The first library found is the
+#   one returned.
+#
+#   The following options are understood: --with-ncursesw, --with-ncurses,
+#   --without-ncursesw, --without-ncurses.  The "--with" options force the
+#   macro to use that particular library, terminating with an error if not
+#   found.  The "--without" options simply skip the check for that library.
+#   The effect on the search pattern is:
+#
+#     (no options)                           - NcursesW, Ncurses, Curses
+#     --with-ncurses     --with-ncursesw     - NcursesW only [*]
+#     --without-ncurses  --with-ncursesw     - NcursesW only [*]
+#                        --with-ncursesw     - NcursesW only [*]
+#     --with-ncurses     --without-ncursesw  - Ncurses only [*]
+#     --with-ncurses                         - NcursesW, Ncurses [**]
+#     --without-ncurses  --without-ncursesw  - Curses only
+#                        --without-ncursesw  - Ncurses, Curses
+#     --without-ncurses                      - NcursesW, Curses
+#
+#   [*]  If the library is not found, abort the configure script.
+#
+#   [**] If the second library (Ncurses) is not found, abort configure.
+#
+#   The following preprocessor symbols may be defined by this macro if the
+#   appropriate conditions are met:
+#
+#     HAVE_CURSES             - if any SysV or X/Open Curses library found
+#     HAVE_CURSES_ENHANCED    - if library supports X/Open Enhanced functions
+#     HAVE_CURSES_COLOR       - if library supports color (enhanced functions)
+#     HAVE_CURSES_OBSOLETE    - if library supports certain obsolete features
+#     HAVE_NCURSESW           - if NcursesW (wide char) library is to be used
+#     HAVE_NCURSES            - if the Ncurses library is to be used
+#
+#     HAVE_CURSES_H           - if <curses.h> is present and should be used
+#     HAVE_NCURSESW_H         - if <ncursesw.h> should be used
+#     HAVE_NCURSES_H          - if <ncurses.h> should be used
+#     HAVE_NCURSESW_CURSES_H  - if <ncursesw/curses.h> should be used
+#     HAVE_NCURSES_CURSES_H   - if <ncurses/curses.h> should be used
+#
+#   (These preprocessor symbols are discussed later in this document.)
+#
+#   The following output variable is defined by this macro; it is precious
+#   and may be overridden on the ./configure command line:
+#
+#     CURSES_LIB  - library to add to xxx_LDADD
+#
+#   The library listed in CURSES_LIB is NOT added to LIBS by default. You
+#   need to add CURSES_LIB to the appropriate xxx_LDADD line in your
+#   Makefile.am.  For example:
+#
+#     prog_LDADD = @CURSES_LIB@
+#
+#   If CURSES_LIB is set on the configure command line (such as by running
+#   "./configure CURSES_LIB=-lmycurses"), then the only header searched for
+#   is <curses.h>.  The user may use the CPPFLAGS precious variable to
+#   override the standard #include search path.  If the user needs to
+#   specify an alternative path for a library (such as for a non-standard
+#   NcurseW), the user should use the LDFLAGS variable.
+#
+#   The following shell variables may be defined by this macro:
+#
+#     ax_cv_curses           - set to "yes" if any Curses library found
+#     ax_cv_curses_enhanced  - set to "yes" if Enhanced functions present
+#     ax_cv_curses_color     - set to "yes" if color functions present
+#     ax_cv_curses_obsolete  - set to "yes" if obsolete features present
+#
+#     ax_cv_ncursesw      - set to "yes" if NcursesW library found
+#     ax_cv_ncurses       - set to "yes" if Ncurses library found
+#     ax_cv_plaincurses   - set to "yes" if plain Curses library found
+#     ax_cv_curses_which  - set to "ncursesw", "ncurses", "plaincurses" or "no"
+#
+#   These variables can be used in your configure.ac to determine the level
+#   of support you need from the Curses library.  For example, if you must
+#   have either Ncurses or NcursesW, you could include:
+#
+#     AX_WITH_CURSES
+#     if test "x$ax_cv_ncursesw" != xyes && test "x$ax_cv_ncurses" != xyes; then
+#         AX_MSG_ERROR([requires either NcursesW or Ncurses library])
+#     fi
+#
+#   If any Curses library will do (but one must be present and must support
+#   color), you could use:
+#
+#     AX_WITH_CURSES
+#     if test "x$ax_cv_curses" != xyes || test "x$ax_cv_curses_color" != xyes; then
+#         AC_MSG_ERROR([requires an X/Open-compatible Curses library with color])
+#     fi
+#
+#   Certain preprocessor symbols and shell variables defined by this macro
+#   can be used to determine various features of the Curses library.  In
+#   particular, HAVE_CURSES and ax_cv_curses are defined if the Curses
+#   library found conforms to the traditional SysV and/or X/Open Base Curses
+#   definition.  Any working Curses library conforms to this level.
+#
+#   HAVE_CURSES_ENHANCED and ax_cv_curses_enhanced are defined if the
+#   library supports the X/Open Enhanced Curses definition.  In particular,
+#   the wide-character types attr_t, cchar_t and wint_t, the functions
+#   wattr_set() and wget_wch() and the macros WA_NORMAL and _XOPEN_CURSES
+#   are checked.  The Ncurses library does NOT conform to this definition,
+#   although NcursesW does.
+#
+#   HAVE_CURSES_COLOR and ax_cv_curses_color are defined if the library
+#   supports color functions and macros such as COLOR_PAIR, A_COLOR,
+#   COLOR_WHITE, COLOR_RED and init_pair().  These are NOT part of the
+#   X/Open Base Curses definition, but are part of the Enhanced set of
+#   functions.  The Ncurses library DOES support these functions, as does
+#   NcursesW.
+#
+#   HAVE_CURSES_OBSOLETE and ax_cv_curses_obsolete are defined if the
+#   library supports certain features present in SysV and BSD Curses but not
+#   defined in the X/Open definition.  In particular, the functions
+#   getattrs(), getcurx() and getmaxx() are checked.
+#
+#   To use the HAVE_xxx_H preprocessor symbols, insert the following into
+#   your system.h (or equivalent) header file:
+#
+#     #if defined HAVE_NCURSESW_CURSES_H
+#     #  include <ncursesw/curses.h>
+#     #elif defined HAVE_NCURSESW_H
+#     #  include <ncursesw.h>
+#     #elif defined HAVE_NCURSES_CURSES_H
+#     #  include <ncurses/curses.h>
+#     #elif defined HAVE_NCURSES_H
+#     #  include <ncurses.h>
+#     #elif defined HAVE_CURSES_H
+#     #  include <curses.h>
+#     #else
+#     #  error "SysV or X/Open-compatible Curses header file required"
+#     #endif
+#
+#   For previous users of this macro: you should not need to change anything
+#   in your configure.ac or Makefile.am, as the previous (serial 10)
+#   semantics are still valid.  However, you should update your system.h (or
+#   equivalent) header file to the fragment shown above. You are encouraged
+#   also to make use of the extended functionality provided by this version
+#   of AX_WITH_CURSES, as well as in the additional macros
+#   AX_WITH_CURSES_PANEL, AX_WITH_CURSES_MENU and AX_WITH_CURSES_FORM.
+#
+# LICENSE
+#
+#   Copyright (c) 2009 Mark Pulford <mark@kyne.com.au>
+#   Copyright (c) 2009 Damian Pietras <daper@daper.net>
+#   Copyright (c) 2012 Reuben Thomas <rrt@sc3d.org>
+#   Copyright (c) 2011 John Zaitseff <J.Zaitseff@zap.org.au>
+#
+#   This program is free software: you can redistribute it and/or modify it
+#   under the terms of the GNU General Public License as published by the
+#   Free Software Foundation, either version 3 of the License, or (at your
+#   option) any later version.
+#
+#   This program is distributed in the hope that it will be useful, but
+#   WITHOUT ANY WARRANTY; without even the implied warranty of
+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
+#   Public License for more details.
+#
+#   You should have received a copy of the GNU General Public License along
+#   with this program. If not, see <http://www.gnu.org/licenses/>.
+#
+#   As a special exception, the respective Autoconf Macro's copyright owner
+#   gives unlimited permission to copy, distribute and modify the configure
+#   scripts that are the output of Autoconf when processing the Macro. You
+#   need not follow the terms of the GNU General Public License when using
+#   or distributing such scripts, even though portions of the text of the
+#   Macro appear in them. The GNU General Public License (GPL) does govern
+#   all other use of the material that constitutes the Autoconf Macro.
+#
+#   This special exception to the GPL applies to versions of the Autoconf
+#   Macro released by the Autoconf Archive. When you make and distribute a
+#   modified version of the Autoconf Macro, you may extend this special
+#   exception to the GPL to apply to your modified version as well.
+
+#serial 13
+
+AU_ALIAS([MP_WITH_CURSES], [AX_WITH_CURSES])
+AC_DEFUN([AX_WITH_CURSES], [
+    AC_ARG_VAR([CURSES_LIB], [linker library for Curses, e.g. -lcurses])
+    AC_ARG_WITH([ncurses], [AS_HELP_STRING([--with-ncurses],
+        [force the use of Ncurses or NcursesW])],
+        [], [with_ncurses=check])
+    AC_ARG_WITH([ncursesw], [AS_HELP_STRING([--without-ncursesw],
+        [do not use NcursesW (wide character support)])],
+        [], [with_ncursesw=check])
+
+    ax_saved_LIBS=$LIBS
+    AS_IF([test "x$with_ncurses" = xyes || test "x$with_ncursesw" = xyes],
+        [ax_with_plaincurses=no], [ax_with_plaincurses=check])
+
+    ax_cv_curses_which=no
+
+    # Test for NcursesW
+
+    AS_IF([test "x$CURSES_LIB" = x && test "x$with_ncursesw" != xno], [
+        LIBS="$ax_saved_LIBS -lncursesw"
+
+        AC_CACHE_CHECK([for NcursesW wide-character library], [ax_cv_ncursesw], [
+            AC_LINK_IFELSE([AC_LANG_CALL([], [initscr])],
+                [ax_cv_ncursesw=yes], [ax_cv_ncursesw=no])
+        ])
+        AS_IF([test "x$ax_cv_ncursesw" = xno && test "x$with_ncursesw" = xyes], [
+            AC_MSG_ERROR([--with-ncursesw specified but could not find NcursesW library])
+        ])
+
+        AS_IF([test "x$ax_cv_ncursesw" = xyes], [
+            ax_cv_curses=yes
+            ax_cv_curses_which=ncursesw
+            CURSES_LIB="-lncursesw"
+            AC_DEFINE([HAVE_NCURSESW], [1], [Define to 1 if the NcursesW library is present])
+            AC_DEFINE([HAVE_CURSES],   [1], [Define to 1 if a SysV or X/Open compatible Curses library is present])
+
+            AC_CACHE_CHECK([for working ncursesw/curses.h], [ax_cv_header_ncursesw_curses_h], [
+                AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+                        @%:@define _XOPEN_SOURCE_EXTENDED 1
+                        @%:@include <ncursesw/curses.h>
+                    ]], [[
+                        chtype a = A_BOLD;
+                        int b = KEY_LEFT;
+                        chtype c = COLOR_PAIR(1) & A_COLOR;
+                        attr_t d = WA_NORMAL;
+                        cchar_t e;
+                        wint_t f;
+                        int g = getattrs(stdscr);
+                        int h = getcurx(stdscr) + getmaxx(stdscr);
+                        initscr();
+                        init_pair(1, COLOR_WHITE, COLOR_RED);
+                        wattr_set(stdscr, d, 0, NULL);
+                        wget_wch(stdscr, &f);
+                    ]])],
+                    [ax_cv_header_ncursesw_curses_h=yes],
+                    [ax_cv_header_ncursesw_curses_h=no])
+            ])
+            AS_IF([test "x$ax_cv_header_ncursesw_curses_h" = xyes], [
+                ax_cv_curses_enhanced=yes
+                ax_cv_curses_color=yes
+                ax_cv_curses_obsolete=yes
+                AC_DEFINE([HAVE_CURSES_ENHANCED],   [1], [Define to 1 if library supports X/Open Enhanced functions])
+                AC_DEFINE([HAVE_CURSES_COLOR],      [1], [Define to 1 if library supports color (enhanced functions)])
+                AC_DEFINE([HAVE_CURSES_OBSOLETE],   [1], [Define to 1 if library supports certain obsolete features])
+                AC_DEFINE([HAVE_NCURSESW_CURSES_H], [1], [Define to 1 if <ncursesw/curses.h> is present])
+            ])
+
+            AC_CACHE_CHECK([for working ncursesw.h], [ax_cv_header_ncursesw_h], [
+                AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+                        @%:@define _XOPEN_SOURCE_EXTENDED 1
+                        @%:@include <ncursesw.h>
+                    ]], [[
+                        chtype a = A_BOLD;
+                        int b = KEY_LEFT;
+                        chtype c = COLOR_PAIR(1) & A_COLOR;
+                        attr_t d = WA_NORMAL;
+                        cchar_t e;
+                        wint_t f;
+                        int g = getattrs(stdscr);
+                        int h = getcurx(stdscr) + getmaxx(stdscr);
+                        initscr();
+                        init_pair(1, COLOR_WHITE, COLOR_RED);
+                        wattr_set(stdscr, d, 0, NULL);
+                        wget_wch(stdscr, &f);
+                    ]])],
+                    [ax_cv_header_ncursesw_h=yes],
+                    [ax_cv_header_ncursesw_h=no])
+            ])
+            AS_IF([test "x$ax_cv_header_ncursesw_h" = xyes], [
+                ax_cv_curses_enhanced=yes
+                ax_cv_curses_color=yes
+                ax_cv_curses_obsolete=yes
+                AC_DEFINE([HAVE_CURSES_ENHANCED], [1], [Define to 1 if library supports X/Open Enhanced functions])
+                AC_DEFINE([HAVE_CURSES_COLOR],    [1], [Define to 1 if library supports color (enhanced functions)])
+                AC_DEFINE([HAVE_CURSES_OBSOLETE], [1], [Define to 1 if library supports certain obsolete features])
+                AC_DEFINE([HAVE_NCURSESW_H],      [1], [Define to 1 if <ncursesw.h> is present])
+            ])
+
+            AC_CACHE_CHECK([for working ncurses.h], [ax_cv_header_ncurses_h_with_ncursesw], [
+                AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+                        @%:@define _XOPEN_SOURCE_EXTENDED 1
+                        @%:@include <ncurses.h>
+                    ]], [[
+                        chtype a = A_BOLD;
+                        int b = KEY_LEFT;
+                        chtype c = COLOR_PAIR(1) & A_COLOR;
+                        attr_t d = WA_NORMAL;
+                        cchar_t e;
+                        wint_t f;
+                        int g = getattrs(stdscr);
+                        int h = getcurx(stdscr) + getmaxx(stdscr);
+                        initscr();
+                        init_pair(1, COLOR_WHITE, COLOR_RED);
+                        wattr_set(stdscr, d, 0, NULL);
+                        wget_wch(stdscr, &f);
+                    ]])],
+                    [ax_cv_header_ncurses_h_with_ncursesw=yes],
+                    [ax_cv_header_ncurses_h_with_ncursesw=no])
+            ])
+            AS_IF([test "x$ax_cv_header_ncurses_h_with_ncursesw" = xyes], [
+                ax_cv_curses_enhanced=yes
+                ax_cv_curses_color=yes
+                ax_cv_curses_obsolete=yes
+                AC_DEFINE([HAVE_CURSES_ENHANCED], [1], [Define to 1 if library supports X/Open Enhanced functions])
+                AC_DEFINE([HAVE_CURSES_COLOR],    [1], [Define to 1 if library supports color (enhanced functions)])
+                AC_DEFINE([HAVE_CURSES_OBSOLETE], [1], [Define to 1 if library supports certain obsolete features])
+                AC_DEFINE([HAVE_NCURSES_H],       [1], [Define to 1 if <ncurses.h> is present])
+            ])
+
+            AS_IF([test "x$ax_cv_header_ncursesw_curses_h" = xno && test "x$ax_cv_header_ncursesw_h" = xno && test "x$ax_cv_header_ncurses_h_with_ncursesw" = xno], [
+                AC_MSG_WARN([could not find a working ncursesw/curses.h, ncursesw.h or ncurses.h])
+            ])
+        ])
+    ])
+
+    # Test for Ncurses
+
+    AS_IF([test "x$CURSES_LIB" = x && test "x$with_ncurses" != xno && test "x$ax_cv_curses_which" = xno], [
+        LIBS="$ax_saved_LIBS -lncurses"
+
+        AC_CACHE_CHECK([for Ncurses library], [ax_cv_ncurses], [
+            AC_LINK_IFELSE([AC_LANG_CALL([], [initscr])],
+                [ax_cv_ncurses=yes], [ax_cv_ncurses=no])
+        ])
+        AS_IF([test "x$ax_cv_ncurses" = xno && test "x$with_ncurses" = xyes], [
+            AC_MSG_ERROR([--with-ncurses specified but could not find Ncurses library])
+        ])
+
+        AS_IF([test "x$ax_cv_ncurses" = xyes], [
+            ax_cv_curses=yes
+            ax_cv_curses_which=ncurses
+            CURSES_LIB="-lncurses"
+            AC_DEFINE([HAVE_NCURSES], [1], [Define to 1 if the Ncurses library is present])
+            AC_DEFINE([HAVE_CURSES],  [1], [Define to 1 if a SysV or X/Open compatible Curses library is present])
+
+            AC_CACHE_CHECK([for working ncurses/curses.h], [ax_cv_header_ncurses_curses_h], [
+                AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+                        @%:@include <ncurses/curses.h>
+                    ]], [[
+                        chtype a = A_BOLD;
+                        int b = KEY_LEFT;
+                        chtype c = COLOR_PAIR(1) & A_COLOR;
+                        int g = getattrs(stdscr);
+                        int h = getcurx(stdscr) + getmaxx(stdscr);
+                        initscr();
+                        init_pair(1, COLOR_WHITE, COLOR_RED);
+                    ]])],
+                    [ax_cv_header_ncurses_curses_h=yes],
+                    [ax_cv_header_ncurses_curses_h=no])
+            ])
+            AS_IF([test "x$ax_cv_header_ncurses_curses_h" = xyes], [
+                ax_cv_curses_color=yes
+                ax_cv_curses_obsolete=yes
+                AC_DEFINE([HAVE_CURSES_COLOR],     [1], [Define to 1 if library supports color (enhanced functions)])
+                AC_DEFINE([HAVE_CURSES_OBSOLETE],  [1], [Define to 1 if library supports certain obsolete features])
+                AC_DEFINE([HAVE_NCURSES_CURSES_H], [1], [Define to 1 if <ncurses/curses.h> is present])
+            ])
+
+            AC_CACHE_CHECK([for working ncurses.h], [ax_cv_header_ncurses_h], [
+                AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+                        @%:@include <ncurses.h>
+                    ]], [[
+                        chtype a = A_BOLD;
+                        int b = KEY_LEFT;
+                        chtype c = COLOR_PAIR(1) & A_COLOR;
+                        int g = getattrs(stdscr);
+                        int h = getcurx(stdscr) + getmaxx(stdscr);
+                        initscr();
+                        init_pair(1, COLOR_WHITE, COLOR_RED);
+                    ]])],
+                    [ax_cv_header_ncurses_h=yes],
+                    [ax_cv_header_ncurses_h=no])
+            ])
+            AS_IF([test "x$ax_cv_header_ncurses_h" = xyes], [
+                ax_cv_curses_color=yes
+                ax_cv_curses_obsolete=yes
+                AC_DEFINE([HAVE_CURSES_COLOR],    [1], [Define to 1 if library supports color (enhanced functions)])
+                AC_DEFINE([HAVE_CURSES_OBSOLETE], [1], [Define to 1 if library supports certain obsolete features])
+                AC_DEFINE([HAVE_NCURSES_H],       [1], [Define to 1 if <ncurses.h> is present])
+            ])
+
+            AS_IF([test "x$ax_cv_header_ncurses_curses_h" = xno && test "x$ax_cv_header_ncurses_h" = xno], [
+                AC_MSG_WARN([could not find a working ncurses/curses.h or ncurses.h])
+            ])
+        ])
+    ])
+
+    # Test for plain Curses (or if CURSES_LIB was set by user)
+
+    AS_IF([test "x$with_plaincurses" != xno && test "x$ax_cv_curses_which" = xno], [
+        AS_IF([test "x$CURSES_LIB" != x], [
+            LIBS="$ax_saved_LIBS $CURSES_LIB"
+        ], [
+            LIBS="$ax_saved_LIBS -lcurses"
+        ])
+
+        AC_CACHE_CHECK([for Curses library], [ax_cv_plaincurses], [
+            AC_LINK_IFELSE([AC_LANG_CALL([], [initscr])],
+                [ax_cv_plaincurses=yes], [ax_cv_plaincurses=no])
+        ])
+
+        AS_IF([test "x$ax_cv_plaincurses" = xyes], [
+            ax_cv_curses=yes
+            ax_cv_curses_which=plaincurses
+            AS_IF([test "x$CURSES_LIB" = x], [
+                CURSES_LIB="-lcurses"
+            ])
+            AC_DEFINE([HAVE_CURSES], [1], [Define to 1 if a SysV or X/Open compatible Curses library is present])
+
+            # Check for base conformance (and header file)
+
+            AC_CACHE_CHECK([for working curses.h], [ax_cv_header_curses_h], [
+                AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+                        @%:@include <curses.h>
+                    ]], [[
+                        chtype a = A_BOLD;
+                        int b = KEY_LEFT;
+                        initscr();
+                    ]])],
+                    [ax_cv_header_curses_h=yes],
+                    [ax_cv_header_curses_h=no])
+            ])
+            AS_IF([test "x$ax_cv_header_curses_h" = xyes], [
+                AC_DEFINE([HAVE_CURSES_H], [1], [Define to 1 if <curses.h> is present])
+
+                # Check for X/Open Enhanced conformance
+
+                AC_CACHE_CHECK([for X/Open Enhanced Curses conformance], [ax_cv_plaincurses_enhanced], [
+                    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+                            @%:@define _XOPEN_SOURCE_EXTENDED 1
+                            @%:@include <curses.h>
+                            @%:@ifndef _XOPEN_CURSES
+                            @%:@error "this Curses library is not enhanced"
+                            "this Curses library is not enhanced"
+                            @%:@endif
+                        ]], [[
+                            chtype a = A_BOLD;
+                            int b = KEY_LEFT;
+                            chtype c = COLOR_PAIR(1) & A_COLOR;
+                            attr_t d = WA_NORMAL;
+                            cchar_t e;
+                            wint_t f;
+                            initscr();
+                            init_pair(1, COLOR_WHITE, COLOR_RED);
+                            wattr_set(stdscr, d, 0, NULL);
+                            wget_wch(stdscr, &f);
+                        ]])],
+                        [ax_cv_plaincurses_enhanced=yes],
+                        [ax_cv_plaincurses_enhanced=no])
+                ])
+                AS_IF([test "x$ax_cv_plaincurses_enhanced" = xyes], [
+                    ax_cv_curses_enhanced=yes
+                    ax_cv_curses_color=yes
+                    AC_DEFINE([HAVE_CURSES_ENHANCED], [1], [Define to 1 if library supports X/Open Enhanced functions])
+                    AC_DEFINE([HAVE_CURSES_COLOR],    [1], [Define to 1 if library supports color (enhanced functions)])
+                ])
+
+                # Check for color functions
+
+                AC_CACHE_CHECK([for Curses color functions], [ax_cv_plaincurses_color], [
+                    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+                        @%:@define _XOPEN_SOURCE_EXTENDED 1
+                        @%:@include <curses.h>
+                        ]], [[
+                            chtype a = A_BOLD;
+                            int b = KEY_LEFT;
+                            chtype c = COLOR_PAIR(1) & A_COLOR;
+                            initscr();
+                            init_pair(1, COLOR_WHITE, COLOR_RED);
+                        ]])],
+                        [ax_cv_plaincurses_color=yes],
+                        [ax_cv_plaincurses_color=no])
+                ])
+                AS_IF([test "x$ax_cv_plaincurses_color" = xyes], [
+                    ax_cv_curses_color=yes
+                    AC_DEFINE([HAVE_CURSES_COLOR], [1], [Define to 1 if library supports color (enhanced functions)])
+                ])
+
+                # Check for obsolete functions
+
+                AC_CACHE_CHECK([for obsolete Curses functions], [ax_cv_plaincurses_obsolete], [
+                AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+                        @%:@include <curses.h>
+                    ]], [[
+                        chtype a = A_BOLD;
+                        int b = KEY_LEFT;
+                        int g = getattrs(stdscr);
+                        int h = getcurx(stdscr) + getmaxx(stdscr);
+                        initscr();
+                    ]])],
+                    [ax_cv_plaincurses_obsolete=yes],
+                    [ax_cv_plaincurses_obsolete=no])
+                ])
+                AS_IF([test "x$ax_cv_plaincurses_obsolete" = xyes], [
+                    ax_cv_curses_obsolete=yes
+                    AC_DEFINE([HAVE_CURSES_OBSOLETE], [1], [Define to 1 if library supports certain obsolete features])
+                ])
+            ])
+
+            AS_IF([test "x$ax_cv_header_curses_h" = xno], [
+                AC_MSG_WARN([could not find a working curses.h])
+            ])
+        ])
+    ])
+
+    AS_IF([test "x$ax_cv_curses"          != xyes], [ax_cv_curses=no])
+    AS_IF([test "x$ax_cv_curses_enhanced" != xyes], [ax_cv_curses_enhanced=no])
+    AS_IF([test "x$ax_cv_curses_color"    != xyes], [ax_cv_curses_color=no])
+    AS_IF([test "x$ax_cv_curses_obsolete" != xyes], [ax_cv_curses_obsolete=no])
+
+    LIBS=$ax_saved_LIBS
+])dnl
diff --git a/configure.ac b/configure.ac
index f237ebe..d2eaf88 100644
--- a/configure.ac
+++ b/configure.ac
@@ -948,6 +948,20 @@ AC_CHECK_LIB([pthread],[pthread_exit],[AC_SUBST([LIBTHREAD],["-lpthread"])])
 AC_CHECK_LIB([rt],[clock_gettime],[AC_SUBST([LIBRT],["-lrt"])])
 AC_CHECK_LIB([posix4],[clock_gettime],[AC_SUBST([LIBRT],["-lposix4"])])
 
+# Test for ncurses. We need to turn off -Werror because the C code in the
+# ncurses compile tests does not generate unused variable warnings.
+__saved_CFLAGS="$CFLAGS"
+TS_REMOVEFROM(CFLAGS, -Werror)
+AX_WITH_CURSES
+CFLAGS="$__saved_CFLAGS"
+
+AX_LIB_CURL([7.19], [
+    AM_CONDITIONAL([BUILD_TSTOP], [test "x$ax_cv_curses" = "xyes"])
+  ], [
+    AM_CONDITIONAL([BUILD_TSTOP], [false])
+  ]
+)
+
 #
 # The header_rewrite module depends on boost.
 AX_BOOST_BASE([1.50],
diff --git a/configure.ac.orig b/configure.ac.orig
new file mode 100644
index 0000000..f237ebe
--- /dev/null
+++ b/configure.ac.orig
@@ -0,0 +1,1705 @@
+# Process this file with `autoreconf -i` to create a 'configure' file.
+
+#  Licensed to the Apache Software Foundation (ASF) under one
+#  or more contributor license agreements.  See the NOTICE file
+#  distributed with this work for additional information
+#  regarding copyright ownership.  The ASF licenses this file
+#  to you under the Apache License, Version 2.0 (the
+#  "License"); you may not use this file except in compliance
+#  with the License.  You may obtain a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+#  Unless required by applicable law or agreed to in writing, software
+#  distributed under the License is distributed on an "AS IS" BASIS,
+#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+#  See the License for the specific language governing permissions and
+#  limitations under the License.
+
+# Table of Contents
+# 1. INITIALIZATION
+# 2. SITE CONFIGURATION
+# 3. CHECK FOR PROGRAMS
+# 4. CHECK FOR LIBRARIES
+# 5. CHECK FOR HEADERS
+# 6. OUTPUT FILES
+# 7. autoheader TEMPLATES
+
+# -----------------------------------------------------------------------------
+# 1. INITIALIZATION
+
+# These first two version numbers are updated automatically on each release.
+# Version number is calculated as MAJOR * 1000000 + MINOR * 1000 + MICRO
+# Version string is in the form of MAJOR.MINOR.MICRO[sufix]
+#
+m4_define([TS_VERSION_S],[3.3.2-dev])
+m4_define([TS_VERSION_N],[3003002])
+
+AC_INIT([Apache Traffic Server], TS_VERSION_S(), [dev@trafficserver.apache.org], [trafficserver],[http://trafficserver.apache.org])
+AC_PREREQ([2.59])
+AC_CONFIG_AUX_DIR([build/aux])
+AC_CONFIG_SRCDIR([proxy/Main.cc])
+AC_CONFIG_MACRO_DIR([build])
+AM_INIT_AUTOMAKE([-Wall -Werror foreign no-installinfo no-installman 1.9.2])
+AC_CONFIG_HEADERS([lib/ts/ink_autoconf.h])
+
+# Configure with --disable-silent-rules to get verbose output. For more info, see
+# http://www.gnu.org/software/automake/manual/html_node/Automake-silent_002drules-Option.html
+m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])
+
+AC_DISABLE_STATIC
+
+# Libtool versioning uses different conventions on different
+# platforms.  At least on FreeBSD, libtool uses an overly complex
+# convention that attempts to solve problems that most people just
+# don't have and which just causes confusion for most end users.
+#
+TS_VERSION_MAJOR=$((TS_VERSION_N() / 1000000 ))
+TS_VERSION_MINOR=$(((TS_VERSION_N() / 1000) % 1000 ))
+TS_VERSION_MICRO=$((TS_VERSION_N() % 1000 ))
+TS_LIBTOOL_MAJOR=`echo $((${TS_VERSION_MAJOR} + ${TS_VERSION_MINOR}))`
+TS_LIBTOOL_VERSION=$TS_LIBTOOL_MAJOR:$TS_VERSION_MICRO:$TS_VERSION_MINOR
+TS_VERSION_STRING=TS_VERSION_S()
+TS_VERSION_NUMBER=TS_VERSION_N()
+
+#
+# Substitute the above version numbers into the various files below.
+#
+AC_SUBST(TS_LIBTOOL_VERSION)
+AC_SUBST(TS_VERSION_STRING)
+AC_SUBST(TS_VERSION_NUMBER)
+AC_SUBST(TS_VERSION_MAJOR)
+AC_SUBST(TS_VERSION_MINOR)
+AC_SUBST(TS_VERSION_MICRO)
+
+dnl Hard-coded top of ink_autoconf.h:
+AH_TOP([
+#ifndef _ink_autoconf_h
+#define _ink_autoconf_h
+])
+
+dnl Hard-coded inclusion at the tail end of ink_autoconf.h:
+AH_BOTTOM([
+
+#endif /* _ink_autoconf_h */
+])
+
+#
+# Generate ./config.nice for reproducing runs of configure
+#
+TS_CONFIG_NICE([config.nice])
+
+# XXX we can't just use AC_PREFIX_DEFAULT because that isn't subbed in
+# by configure until it is too late.  Is that how it should be or not?
+# Something seems broken here.
+AC_PREFIX_DEFAULT([/usr/local/trafficserver])
+
+# Get the layout here, so we can pass the required variables to Trafficserver
+TS_ENABLE_LAYOUT(TrafficServer, [cachedir docdir])
+
+# Reparse the configure arguments so we can override the layout.
+TS_PARSE_ARGUMENTS
+
+#
+# Host detection
+#
+AC_CANONICAL_HOST
+HOST_GUESS="$host"
+AC_SUBST(HOST_GUESS)
+
+#
+# Build environment
+#
+build_person="`id -nu`"
+build_group="`id -ng`"
+build_machine="`uname -n`"
+AC_SUBST([build_machine])
+AC_SUBST([build_person])
+AC_SUBST([build_group])
+
+AC_ARG_WITH([user],
+  [AS_HELP_STRING([--with-user],[specify the system user [default=nobody]])],
+  [
+  with_user="$withval"
+  ],[
+  with_user="nobody"
+  ]
+)
+
+default_group="`id -ng $with_user`"
+AC_ARG_WITH([group],
+  [AS_HELP_STRING([--with-group],[specify the system group [default=nobody]])],
+  [
+  with_group="$withval"
+  ],[
+  with_group=${default_group:-nobody}
+  ]
+)
+AC_SUBST([pkgsysuser],[$with_user])
+AC_SUBST([pkgsysgroup],[$with_group])
+
+# -----------------------------------------------------------------------------
+# 2. SITE CONFIGURATION
+
+#
+# Debug
+#
+
+AC_MSG_CHECKING([whether to enable debugging])
+AC_ARG_ENABLE([debug],
+  [AS_HELP_STRING([--enable-debug],[turn on debugging])],
+  [],
+  [enable_debug=no]
+)
+AC_MSG_RESULT([$enable_debug])
+
+#
+# Fast SDK APIs, this disables the parameter checks (assert)
+# on all APIs.
+#
+
+AC_MSG_CHECKING([whether to enable fast SDK APIs])
+AC_ARG_ENABLE([fast-sdk],
+  [AS_HELP_STRING([--enable-fast-sdk],[enable fast SDK APIs (no input parameter sanity checks)])],
+  [],
+  [enable_fast_sdk=no]
+)
+AC_MSG_RESULT([$enable_fast_sdk])
+TS_ARG_ENABLE_VAR([use], [fast-sdk])
+AC_SUBST(use_fast_sdk)
+
+#
+# Diags
+#
+
+AC_MSG_CHECKING([whether to enable diags])
+AC_ARG_ENABLE([diags],
+  [AS_HELP_STRING([--disable-diags],[turn off diags])],
+  [],
+  [enable_diags=yes]
+)
+AC_MSG_RESULT([$enable_diags])
+TS_ARG_ENABLE_VAR([use], [diags])
+AC_SUBST(use_diags)
+
+#
+# Build regression tests?
+#
+
+AC_MSG_CHECKING([whether to enable regression tests])
+AC_ARG_ENABLE([tests],
+  [AS_HELP_STRING([--disable-tests],[turn off regression tests])],
+  [],
+  [enable_tests=yes]
+)
+AC_MSG_RESULT([$enable_tests])
+TS_ARG_ENABLE_VAR([has], [tests])
+AC_SUBST(has_tests)
+AM_CONDITIONAL([BUILD_TESTS], [test 0 -ne $has_tests])
+
+#
+# Micro
+#
+AC_MSG_CHECKING([whether to enable micro-TS])
+AC_ARG_ENABLE([micro],
+  [AS_HELP_STRING([--enable-micro],[enable micro-TS build [default=no]])],
+  [],
+  [enable_micro=no]
+)
+AC_MSG_RESULT([$enable_micro])
+AS_IF([test "x$enable_micro" = "xyes"], [is_micro_build=1], [is_micro_build=0])
+AC_SUBST(is_micro_build)
+
+#
+# Standalone iocore
+#
+AC_MSG_CHECKING([whether to build a standalone iocore])
+AC_ARG_ENABLE([standalone-iocore],
+  [AS_HELP_STRING([--enable-standalone-iocore],[build just standalone iocore])],
+  [],
+  [enable_standalone_iocore=no]
+)
+AC_MSG_RESULT([$enable_standalone_iocore])
+TS_ARG_ENABLE_VAR([has],[standalone-iocore])
+AC_SUBST(has_standalone_iocore)
+AS_IF([test 0 -ne $has_standalone_iocore],
+  [AC_SUBST([IOCORE_MODULARIZED_DEFS],[""])
+   AC_SUBST([ink_with_modules_def],["-DREC_BUILD_STAND_ALONE"])
+   AC_SUBST([ink_with_modules_local],[""])
+   AC_SUBST([ink_with_modules_process],[""])
+  ],
+  [AC_SUBST([ink_with_modules_def],["-DREC_BUILD_MGMT"])
+   AC_SUBST([ink_with_modules_local],["-DLOCAL_MANAGER"])
+   AC_SUBST([ink_with_modules_process],["-DPROCESS_MANAGER"])
+  ]
+)
+AM_CONDITIONAL([STANDALONE_IOCORE], [test 0 -ne $has_standalone_iocore])
+
+#
+# Force some static linkage (for testing / development only)
+#
+AC_MSG_CHECKING([whether to build some static libts (dev only)])
+AC_ARG_ENABLE([static-libts],
+  [AS_HELP_STRING([--enable-static-libts],[build some static libts (dev only)])],
+  [],
+  [enable_static_libts=no]
+)
+AC_MSG_RESULT([$enable_static_libts])
+TS_ARG_ENABLE_VAR([has],[static-libts])
+AM_CONDITIONAL([STATIC_LIBTS], [test 0 -ne $has_static_libts])
+
+#
+# Remote Coverity Prevent commit
+#
+AC_MSG_CHECKING([whether to commit cov defects to remote host])
+AC_ARG_ENABLE([remote-cov-commit],
+  [AS_HELP_STRING([--enable-remote-cov-commit[=HOST]], [commit cov defects to remote host [HOST=localhost]])],
+  [],
+  [enable_remote_cov_commit=localhost]
+)
+AC_MSG_RESULT([$enable_remote_cov_commit])
+AC_SUBST([enable_remote_cov_commit])
+
+#
+# API
+#
+AC_MSG_CHECKING([whether to enable API and plugin support])
+AC_ARG_ENABLE([api],
+  [AS_HELP_STRING([--disable-api],[do not enable API and plugin support])],
+  [],
+  [enable_api=yes]
+)
+AC_MSG_RESULT([$enable_api])
+AS_IF([test "x$enable_api" = "xyes"], [has_inkapi=1], [has_inkapi=0])
+AC_SUBST(has_inkapi)
+
+#
+# WCCP
+#
+AC_MSG_CHECKING([whether to enable WCCP v2 support])
+AC_ARG_ENABLE([wccp],
+  [AS_HELP_STRING([--enable-wccp],[enable WCCP v2])],
+  [],
+  [enable_wccp=no]
+)
+AC_MSG_RESULT([$enable_wccp])
+TS_ARG_ENABLE_VAR([has],[wccp])
+AC_SUBST(has_wccp)
+AM_CONDITIONAL([BUILD_WCCP], [test 0 -ne $has_wccp])
+
+# Google profiler
+AC_MSG_CHECKING([whether to enable profiler])
+AC_ARG_WITH([profiler],
+  [AS_HELP_STRING([--with-profiler],[enable support for profiler [default=no]])],
+  [with_profiler=$withval],
+  [with_profiler=no]
+)
+AC_MSG_RESULT([$with_profiler])
+
+#
+# use eventfd() or pipes
+# Found that ec2 is using an older kernel causing eventfd errors.
+# Disable eventfd when using ATS on EC2 Fedora.
+#
+AC_MSG_CHECKING([whether to enable eventfd()])
+AC_ARG_ENABLE([eventfd],
+  [AS_HELP_STRING([--disable-eventfd],[turn off eventfd and use pipes])],
+  [],
+  [enable_eventfd="yes"]
+)
+AC_MSG_RESULT([$enable_eventfd])
+
+#
+# use POSIX capabilities instead of user ID switching.
+#
+AC_MSG_CHECKING([whether to use POSIX capabilities])
+AC_ARG_ENABLE([posix-cap],
+  [AS_HELP_STRING([--disable-posix-cap],[Use user id switching instead of POSIX capabilities])],
+  [],
+  [enable_posix_cap="auto"]
+)
+AC_MSG_RESULT([$enable_posix_cap])
+
+#
+# use hwloc library when possible (can be disabled)
+#
+AC_MSG_CHECKING([whether to use hwloc library])
+AC_ARG_ENABLE([hwloc],
+  [AS_HELP_STRING([--disable-hwloc],[Don't use the hwloc library])],
+  [],
+  [enable_hwloc="yes"]
+)
+AC_MSG_RESULT([$enable_hwloc])
+
+#
+# Enble ccache explicitly (it's disabled by default, because of build problems in some cases)
+#
+AC_MSG_CHECKING([whether to enable ccache])
+AC_ARG_ENABLE([ccache],
+  [AS_HELP_STRING([--enable-ccache],[Enable ccache (can cause bad builds)])],
+  [],
+  [enable_ccache="no"]
+)
+AC_MSG_RESULT([$enable_ccache])
+
+#
+# Use TPROXY for connection transparency.
+#
+AC_MSG_CHECKING([whether to enable TPROXY based transparency])
+AC_ARG_ENABLE([tproxy],
+  [AS_HELP_STRING([--enable-tproxy[[=ARG]]],
+                  [Use TPROXY to enable connection transparency.
+                   'auto' or omitted for local system default,
+		   'no' to disable,
+		   'force' to use built in default,
+		   number to use as IP_TRANSPARENT sockopt.
+		   [default=auto]
+		  ])
+  ],
+  [],
+  [enable_tproxy="auto"]
+)
+AC_MSG_RESULT([$enable_tproxy])
+
+#
+# Disable our freelist implementation, reverting it to whatever
+# allocator (malloc, tcmalloc or jemalloc) that is in use. This is
+# useful for debugging.
+#
+AC_MSG_CHECKING([whether to disable freelist])
+AC_ARG_ENABLE([freelist],
+  [AS_HELP_STRING([--disable-freelist],[turn off freelist and use allocators])],
+  [],
+  [enable_freelist="yes"]
+)
+AC_MSG_RESULT([$enable_freelist])
+TS_ARG_ENABLE_VAR([use], [freelist])
+AC_SUBST(use_freelist)
+
+#
+# The original InkFreeList memory pool could not reclaim itself
+# automatically. We can use '--enable-reclaimable-freelist' option
+# to enable the reclaiming feature. This option is effective only
+# when freelist is enable.
+#
+if test "x${enable_freelist}" = "xyes"; then
+  AC_MSG_CHECKING([whether to enable reclaimable freelist])
+  AC_ARG_ENABLE([reclaimable-freelist],
+		[AS_HELP_STRING([--enable-reclaimable-freelist],
+				[enable reclaimable freelist support (effective only when freelist is enabled)])],
+		[],
+		[enable_recalimable_freelist="yes"])
+  AC_MSG_RESULT([$enable_reclaimable_freelist])
+else
+  enable_reclaimable_freelist="no"
+fi
+TS_ARG_ENABLE_VAR([use], [reclaimable_freelist])
+AC_SUBST(use_reclaimable_freelist)
+
+#
+# If the OS is linux, we can use the '--enable-linux-native-aio' option to
+# replace the aio thread mode. Effective only on the linux system.
+#
+
+AC_MSG_CHECKING([whether to enable Linux native AIO])
+AC_ARG_ENABLE([linux-native-aio],
+  [AS_HELP_STRING([--enable-linux-native-aio], [enable native Linux AIO support @<:@default=no@:>@])],
+  [enable_linux_native_aio="${enableval}"],
+  [enable_linux_native_aio=no]
+)
+
+case $host_os in
+  linux*);;
+  *) AS_IF([test "x$enable_linux_native_aio" = "xyes"], [
+      AC_MSG_ERROR([Linux native AIO can only be enabled on Linux systems])
+    ])
+esac
+
+AC_MSG_RESULT([$enable_linux_native_aio])
+TS_ARG_ENABLE_VAR([use], [linux_native_aio])
+AC_SUBST(use_linux_native_aio)
+
+# Configure how many stats to allocate for plugins. Default is 512.
+#
+AC_ARG_WITH([max-api-stats],
+  [AS_HELP_STRING([--with-max-api-stats],[max number of plugin stats [default=512]])],
+  [max_api_stats=$withval],
+  [max_api_stats=512]
+)
+AC_SUBST(max_api_stats)
+
+#
+# Max host name length that we deal with in URLs.
+#
+AC_ARG_WITH([max-host-name-len],
+  [AS_HELP_STRING([--with-max-host-name-len],[max host name length [default=256]])],
+  [max_host_name_len=$withval],
+  [max_host_name_len=256]
+)
+AC_SUBST(max_host_name_len)
+
+#
+# EventProcessor thread configurations
+#
+
+AC_ARG_WITH([max-event-threads],
+  [AS_HELP_STRING([--with-max-event-threads],[max number of event threads [default=4096]])],
+  [max_event_threads=$withval],
+  [max_event_threads=4096]
+)
+AC_SUBST(max_event_threads)
+
+AC_ARG_WITH([max-threads-per-type],
+  [AS_HELP_STRING([--with-max-threads-per-type],[max number of threads per event type [default=3072]])],
+  [max_threads_per_type=$withval],
+  [max_threads_per_type=3072]
+)
+AC_SUBST(max_threads_per_type)
+
+#
+# Experimental plugins
+#
+
+AC_MSG_CHECKING([whether to enable experimental plugins])
+AC_ARG_ENABLE([experimental-plugins],
+  [AS_HELP_STRING([--enable-experimental-plugins],[build experimental plugins])],
+  [],
+  [enable_experimental_plugins=no]
+)
+AC_MSG_RESULT([$enable_experimental_plugins])
+AM_CONDITIONAL([BUILD_EXPERIMENTAL_PLUGINS], [ test "x${enable_experimental_plugins}" = "xyes" ])
+
+#
+# Installation directories
+# For each var the following is evaluated
+# foo      Standard variable  eg. ${prefix}/foo
+# rel_foo  Relative to prefix eg. foo
+#
+TS_SUBST_LAYOUT_PATH([prefix])
+TS_SUBST_LAYOUT_PATH([exec_prefix])
+TS_SUBST_LAYOUT_PATH([bindir])
+TS_SUBST_LAYOUT_PATH([sbindir])
+TS_SUBST_LAYOUT_PATH([libdir])
+TS_SUBST_LAYOUT_PATH([libexecdir])
+TS_SUBST_LAYOUT_PATH([infodir])
+TS_SUBST_LAYOUT_PATH([mandir])
+TS_SUBST_LAYOUT_PATH([sysconfdir])
+TS_SUBST_LAYOUT_PATH([datadir])
+TS_SUBST_LAYOUT_PATH([installbuilddir])
+TS_SUBST_LAYOUT_PATH([includedir])
+TS_SUBST_LAYOUT_PATH([localstatedir])
+TS_SUBST_LAYOUT_PATH([runtimedir])
+TS_SUBST_LAYOUT_PATH([logdir])
+TS_SUBST_LAYOUT_PATH([cachedir])
+TS_SUBST_LAYOUT_PATH([docdir])
+
+TS_SUBST([pkgbindir])
+TS_SUBST([pkgsbindir])
+TS_SUBST([pkglibdir])
+TS_SUBST([pkglibexecdir])
+TS_SUBST([pkgsysconfdir])
+TS_SUBST([pkgdatadir])
+TS_SUBST([pkglocalstatedir])
+TS_SUBST([pkgruntimedir])
+TS_SUBST([pkglogdir])
+TS_SUBST([pkgcachedir])
+TS_SUBST([pkgdocdir])
+
+
+# -----------------------------------------------------------------------------
+# 3. CHECK FOR PROGRAMS
+
+# Compiler selection:
+#
+# Implementation note (toc)
+# 1) Get default compiler settings (case statement.)
+# 2) Check for over-rides of default compiler.
+# 3) Set standard CFLAGS, SHARED_CFLAGS, etc.
+# 4) (in first kludge mode block...) obtain any further CFLAG-type additions.
+# 5) Test compilers with all flags set.
+
+# AC_PROG can sometimes mangle CFLAGS etc.
+# in particular, on Linux they insert -g -O2, here we preserve any user CFLAGS
+_ts_saved_CFLAGS="${CFLAGS}"
+_ts_saved_CXXFLAGS="${CXXFLAGS}"
+
+AC_PROG_CC
+AC_PROG_CXX
+
+CFLAGS="${_ts_saved_CFLAGS}"
+CXXFLAGS="${_ts_saved_CXXFLAGS}"
+
+# AX_CXX_COMPILE_STDCXX_11 requires the current language to be C++.
+AC_LANG_PUSH([C++])
+
+AX_CXX_COMPILE_STDCXX_11( [noext], [enable_cxx_11_support=yes], [
+  enable_cxx_11_support=no
+  AC_MSG_NOTICE([disabling features that depend on C++11 support])
+])
+
+AM_CONDITIONAL([BUILD_HAVE_CXX_11], [ test "x${enable_cxx_11_support}" = "xyes" ])
+if test "x${enable_cxx_11_support}" = "xyes" ; then
+  AC_DEFINE(HAVE_CXX_11, 1, [Whether the compiler support C++11])
+fi
+
+AC_LANG_POP()
+
+# Check for ccache (if explicitly enabled)
+if test "x$enable_ccache" = "xyes"; then
+    AC_CHECK_PROG([CCACHE],[ccache],[ccache],[])
+    if test "x${CCACHE}" = "xccache"; then
+	CC="$CCACHE $CC"
+	CXX="$CCACHE $CXX"
+    fi
+fi
+
+dnl AC_PROG_SED is only avaliable in recent autoconf versions.
+dnl Use AC_CHECK_PROG instead if AC_PROG_SED is not present.
+ifdef([AC_PROG_SED],
+      [AC_PROG_SED],
+      [AC_CHECK_PROG(SED, sed, sed)])
+
+dnl Same with AM_PROG_AR, but it doesn't seem to be needed in older versions.
+ifdef([AM_PROG_AR],
+      [AM_PROG_AR])
+
+
+AC_PROG_CPP
+AC_PROG_CXXCPP
+AM_PROG_AS
+AC_PROG_AWK
+AC_PROG_LN_S
+AC_PROG_INSTALL
+AC_PROG_LIBTOOL
+AC_CHECK_PROG(RM, rm, rm)
+AC_CHECK_PROG(ASCPP, cpp, cpp)
+AC_CHECK_TOOL(AR, ar, ar)
+AC_ISC_POSIX
+# Do bison check by hand because we must do a version check.
+# Use YACC because it makes autotools shut up.
+BISON_MAJOR=2
+BISON_MINOR=4
+BISON_POINT=1
+AC_CHECK_PROG([YACC],[bison],[bison])
+AS_IF([test -n "$YACC"],
+      [ bison_version_check=`$YACC --version 2>&1 | \
+        $SED -n '/bison/s/^[[^0-9]]*\([[0-9]][[0-9.]]*\)[[^0-9]]*$/\1/p' | \
+        $AWK "{ if (\\$1 > $BISON_MAJOR || (\\$1 == $BISON_MAJOR && (\\$2 > $BISON_MINOR || (\\$2 == $BISON_MINOR && (NR == 2 || \\$3 >= $BISON_POINT))))) print \"yes\"; else printf(\"version %d.%d.%d\",\\$1,\\$2,\\$3); }" FS=. \
+        `
+        AS_IF([test "x$bison_version_check" != "xyes"],
+          [ YACC=''
+	    AS_IF([test -z "$bison_version_check"],
+	      [bison_version_check='no version data']
+	    )
+	  ]
+        )
+      ],
+      [ YACC=''
+        bison_version_check="nothing"
+      ]
+)
+# Check lex/flex by hand because we need flex of a sufficient version.
+FLEX_MAJOR=2
+FLEX_MINOR=5
+FLEX_POINT=33
+dnl ylwrap requires the lexer executable to be an absolute path or in the srcdir.
+dnl but we need various other LEX values.
+AC_PROG_LEX
+AS_IF([test -n "$LEX"],
+      [ flex_version_check=`$LEX --version 2>&1 | \
+        $SED -n '/flex/s/^[[^0-9]]*\([[0-9]][[0-9.]]*\)[[^0-9]]*.*$/\1/p' | \
+        $AWK "{ if (\\$1 > $FLEX_MAJOR || (\\$1 == $FLEX_MAJOR && (\\$2 > $FLEX_MINOR || (\\$2 == $FLEX_MINOR && (NR == 2 || \\$3 >= $FLEX_POINT))))) print \"yes\"; else printf(\"version %d.%d.%d\",\\$1,\\$2,\\$3); }" FS=. \
+        `
+        AS_IF([test "x$flex_version_check" != "xyes"],
+          [ LEX=''
+	    AS_IF([test -z "$flex_version_check"],
+	      [flex_version_check='no version data']
+	    )
+	  ]
+        )
+      ],
+      [ LEX=''
+        flex_version_check="nothing"
+      ]
+)
+
+AS_IF([test "x$enable_wccp" = "xyes"],
+  [
+    AS_IF([test -z "$LEX"  ],
+       AC_MSG_ERROR([Need flex version $FLEX_MAJOR.$FLEX_MINOR.$FLEX_POINT or better to enable WCCP (found $flex_version_check)])
+    )
+
+    AS_IF([test -z "$YACC" ],
+        AC_MSG_ERROR([Need bison version $BISON_MAJOR.$BISON_MINOR.$BISON_POINT or better to enable WCCP (found $bison_version_check)])
+    )
+
+  ]
+)
+
+AC_PATH_PROG([DOXYGEN], [doxygen]) # needed for Doxygen
+AC_PATH_PROG([PERL],[perl],[not found])
+AS_IF([test "x$PERL" = "xnot found"],
+  [AC_MSG_ERROR([check for perl failed. Have you installed perl?])]
+)
+AC_ARG_VAR([DOXYGEN], [full path of Doxygen executable])
+AC_ARG_VAR([PERL], [full path of Perl executable])
+
+# Check for GNU-style -On and for Solaris Studio style -xOn.
+AC_MSG_CHECKING([checking whether to auto-set compiler optimization flags])
+has_optimizer_flags=`echo "$CFLAGS $CXXFLAGS" | ${AWK} '$0 !~ /-x?O.?/{print "no"}'`
+AS_IF([test "x${has_optimizer_flags}" = "xno"],
+	[
+		optimizing_flags='-O3'
+		AC_MSG_RESULT([yes ${optimizing_flags}])
+	],
+	[
+		has_optimizer_flags='yes'
+		optimizing_flags=''
+		AC_MSG_RESULT([no])
+	]
+)
+
+AM_CONDITIONAL([BUILD_HAVE_LIBCXX], [ false ])
+
+base_cc=`basename $CC`
+# These are shortcuts used in combination for the compiler options below
+case $host_os in
+  linux*)
+    case $base_cc in
+    icc)
+      # -Wall goes crazy, so turned these specific checks off for now:
+      #
+      #  111 is "statement is unrecahable"
+      #  279 is "controlling expression is constant", triggered by our asserts
+      #  383 is "value copied to temporary, reference to temporary used"
+      #  444 is "destructor for base class is not virtual"
+      #  522 is "function "xyz" redeclared "inline" after being called
+      #  873 is "has no corresponding operator delete". ToDo: we should fix.
+      #  981 is "operands are evaluated in unspecified order"
+      # 1418 is "external function definition with no prior declaration"
+      # 1419 is "external declaration in primary source file"
+      # 1572 is "floating-point equality and inequality comparisons are unreliable"
+      # 1720 is "operator new" has no corresponding member operator delete"
+      # 2256 is "non-pointer conversion from "int" to "unsigned char" "
+      # 2259 is "non-pointer conversion from "int" to "unsigned char" "
+      # 
+      # TODO: We should try to eliminate more of these -wd exclusions.
+      common_opt="-pipe -Wall -wd111 -wd279 -wd383 -wd522 -wd444 -wd873 -wd981 -wd1418 -wd1419 -wd1572 -wd1720 -wd2256 -wd2259"
+      debug_opt="-ggdb3 $common_opt"
+      release_opt="-g $common_opt $optimization_flags -axsse4.2 -fno-strict-aliasing"
+      cxx_opt="-Wno-invalid-offsetof"
+      ;;
+    clang)
+      debug_opt="-ggdb3 $common_opt -Werror -Qunused-arguments"
+      release_opt="-g $common_opt $optimizing_flags -fno-strict-aliasing -Werror -Qunused-arguments"
+      cxx_opt="-Wno-invalid-offsetof -Werror -Qunused-arguments"
+      ;;
+    *) # gcc
+      # This is useful for finding odd conversions
+      #    common_opt="-pipe -Wall -Werror -Wconversion -Wno-sign-conversion"
+      common_opt="-pipe -Wall -Werror"
+      debug_opt="-ggdb3 $common_opt"
+      release_opt="-g $common_opt $optimizing_flags -feliminate-unused-debug-symbols -fno-strict-aliasing"
+      cxx_opt="-Wno-invalid-offsetof"
+      ;;
+    esac
+    ;; # linux*)
+  darwin*)
+    case $base_cc in
+    clang)
+      common_opt="-pipe -Wall -Werror -Wno-deprecated-declarations"
+      debug_opt="$common_opt"
+      release_opt="-g $common_opt $optimizing_flags -fno-strict-aliasing"
+      cxx_opt="-Wno-invalid-offsetof"
+      # clang on Darwin needs to use libc++ for any C++11 code.
+      AM_CONDITIONAL([BUILD_HAVE_LIBCXX], [ true ])
+      ;;
+    *) # gcc
+      common_opt="-pipe -Wall -Werror -Wno-deprecated-declarations"
+      debug_opt="$common_opt"
+      release_opt="-g $common_opt $optimizing_flags -feliminate-unused-debug-symbols -fno-strict-aliasing"
+      cxx_opt="-Wno-invalid-offsetof"
+      ;;
+    esac
+    # ToDo: This seems semi-kludgy, but useful for MacPort's I think.
+    TS_ADDTO(CPPFLAGS, [-I/opt/local/include])
+    TS_ADDTO(LDFLAGS, [-L/opt/local/lib])
+    ;; # darwin*)
+  freebsd*|kfreebsd*)
+    case $base_cc in
+    clang)
+      common_opt="-pipe -Wall -Werror -Qunused-arguments"
+      debug_opt="-ggdb3 $common_opt"
+      release_opt="-g $common_opt $optimizing_flags -feliminate-unused-debug-symbols -fno-strict-aliasing"
+      cxx_opt="-Wno-invalid-offsetof -Qunused-arguments"
+      ;;
+    *) # gcc
+      common_opt="-pipe -Wall -Werror"
+      debug_opt="-ggdb3 $common_opt"
+      release_opt="-g $common_opt $optimizing_flags -feliminate-unused-debug-symbols -fno-strict-aliasing"
+      cxx_opt="-Wno-invalid-offsetof"
+      ;;
+    esac
+    TS_ADDTO(LDFLAGS, [-L/usr/local/lib])
+    ;;
+  solaris*)
+    if test "x${base_cc}" = "xcc"; then
+      common_opt="-mt -m64 -D__WORDSIZE=64" # FIXME: arch should be detected
+      debug_opt="-g $common_opt"
+      release_opt="-g $common_opt $optimizing_flags"
+      cxx_opt="-library=stlport4"
+      cxx_dbg="+w2"
+      cxx_rel="-erroff"
+      AC_DEFINE([_POSIX_PTHREAD_SEMANTICS],1,
+       [posix thread semantics]
+      )
+      if test "$solaris_use_stlport4" != yes; then
+        postdeps_CXX="-library=Crun"
+      fi
+    else # gcc
+      common_opt="-pipe -Wall -Werror"
+      debug_opt="-ggdb3 $common_opt"
+      release_opt="-g $common_opt $optimizing_flags -feliminate-unused-debug-symbols -fno-strict-aliasing"
+      cxx_opt="-Wno-invalid-offsetof"
+    fi
+    ;;
+  *)
+    common_opt="-pipe -Wall -Werror"
+    debug_opt="-ggdb3 $common_opt"
+    release_opt="-g $common_opt $optimizing_flags -feliminate-unused-debug-symbols -fno-strict-aliasing"
+    cxx_opt="-Wno-invalid-offsetof"
+    ;;
+esac
+
+cc_oflag_opt=$release_opt
+cc_oflag_dbg=$debug_opt
+cxx_oflag_opt="$release_opt $cxx_opt $cxx_rel"
+cxx_oflag_dbg="$debug_opt $cxx_opt $cxx_dbg"
+
+SHARED_CFLAGS=-fPIC
+SHARED_LDFLAGS=-shared
+SHARED_CXXFLAGS=-fPIC
+SHARED_CXXLINKFLAGS=-shared
+
+dnl Checks for pointer size
+AC_CHECK_SIZEOF(void*, 4)
+if test "x$ac_cv_sizeof_voidp" == "x"; then
+  AC_ERROR([Cannot determine size of void*])
+fi
+AC_SUBST(ac_cv_sizeof_voidp)
+
+
+# Checks for TCP defer accept
+case $host_os in
+  linux*)
+    defer_accept=45
+    ;;
+  *)
+    defer_accept=1
+    ;;
+esac
+AC_SUBST(defer_accept)
+
+
+#
+# Here are all the extra linux-specific C(XX)FLAGS additions and
+# so forth.
+# TODO cpu architecture settings separate from operating system settings
+#
+cpu_architecture=""
+# GCC: add a default march if there is not one set
+if test "x${GCC}" = "xyes"; then
+  if test "${ac_cv_sizeof_voidp}" = "4"; then
+    case "$host_cpu" in
+      i?86* | k[5-8]* | pentium* | athlon)
+        cpu_architecture="-march=i586"
+      ;;
+      *sparc*)
+        cpu_architecture="-mv8"
+      ;;
+    esac
+  else
+    case "$host_cpu" in
+      x86_64 | amd64)
+        # XXX: Any need for 64-bit arch flags?
+        # cpu_architecture="-march=native"
+      ;;
+      *sparc*)
+        cpu_architecture="-march=ultrasparc"
+      ;;
+    esac
+  fi
+  # TODO: Add support for other compilers
+  #
+fi
+
+# Overrride detected architecture with the user suplied one
+#
+AC_ARG_WITH(architecture, [AC_HELP_STRING([--with-architecture=ARCH],[use a specific CPU architecture])],
+[
+  if test "x$withval" != "xyes" && test "x$withval" != "xno"; then
+    case "$withval" in
+      -*)
+        # TODO: In case we are cross compiling some of the provided flags
+        #       should be added to the LDFLAGS
+        cpu_architecture="$withval"
+      ;;
+      *)
+        cpu_architecture="-march=$withval"
+      ;;
+    esac
+  elif test "x$withval" = "x"; then
+    AC_MSG_ERROR([--with-architecture requires an param])
+  fi
+])
+
+if test "x$cpu_architecture" != "x"; then
+  TS_ADDTO(CFLAGS, [$cpu_architecture])
+  TS_ADDTO(CXXFLAGS, [$cpu_architecture])
+fi
+
+# 64-bit LFS support
+#
+TS_ADDTO(CPPFLAGS, [-D_LARGEFILE64_SOURCE=1])
+if test "${ac_cv_sizeof_voidp}" = "8"; then
+  TS_ADDTO(CPPFLAGS, [-D_COMPILE64BIT_SOURCE=1])
+else
+  TS_ADDTO(CPPFLAGS, [-D_FILE_OFFSET_BITS=64])
+fi
+TS_ADDTO(CPPFLAGS, [-D_GNU_SOURCE])
+TS_ADDTO(CPPFLAGS, [-D_REENTRANT])
+
+case $host_os in
+  linux*)
+    EXTRA_CXX_LDFLAGS="-rdynamic"
+    host_os_def=linux
+    ;;
+  darwin*)
+    host_os_def=darwin
+    ;;
+  freebsd*)
+    EXTRA_CXX_LDFLAGS="-rdynamic"
+    host_os_def=freebsd
+    ;;
+  kfreebsd*)
+    EXTRA_CXX_LDFLAGS="-rdynamic"
+    host_os_def=freebsd
+    TS_ADDTO(CPPFLAGS, [-Dkfreebsd])
+    ;;
+  solaris*)
+    host_os_def=solaris
+    ;;
+  openbsd*)
+    host_os_def=openbsd
+    ;;
+  *)
+    EXTRA_CXX_LDFLAGS="-rdynamic"
+    host_os_def=unknown
+   ;;
+esac
+TS_ADDTO(CPPFLAGS, [-D$host_os_def])
+
+AC_MSG_NOTICE([Build for host OS: $host_os, arch: $host_cpu, optimization: $host_os_def])
+
+#
+# _Here_ is where we go ahead and add the _optimizations_ to already
+#  existing CFLAGS/CXXFLAGS if some special values had been set.
+#
+if test "x${enable_debug}" = "xyes"; then
+  TS_ADDTO(CFLAGS, [${cc_oflag_dbg}])
+  TS_ADDTO(CXXFLAGS, [${cxx_oflag_dbg}])
+  TS_ADDTO(CPPFLAGS, [-DDEBUG -D_DEBUG])
+else
+  TS_ADDTO(CFLAGS, [${cc_oflag_opt}])
+  TS_ADDTO(CXXFLAGS, [${cxx_oflag_opt}])
+fi
+
+#
+# Note:  These are site-specific macro's that do various tests
+#         on the selected compilers.  There was some tunning
+#         associated with our not wanting to use GNU for _everything_.
+# Note:  This macro may set certain parameters when run.
+#
+
+#
+# CPP 11 API
+#
+AC_MSG_CHECKING([whether to enable c++11 api])
+AC_ARG_WITH([cpp11api],
+  [AS_HELP_STRING([--with-cpp11api],[enable support for cpp11api [default=auto]])],
+  [cpp11api=$withval],
+  [cpp11api=$enable_cxx_11_support]
+)
+AC_MSG_RESULT([$cpp11api])
+AM_CONDITIONAL([BUILD_CPP11API], [test "$cpp11api" = yes])
+
+
+# -----------------------------------------------------------------------------
+# 4. CHECK FOR LIBRARIES
+
+AC_CHECK_LIB([exc],[exc_capture_context],[AC_SUBST([LIBEXC],["-lexc"])])
+AC_CHECK_LIB([mld],[MLD_demangle_string],[AC_SUBST([LIBMLD],["-lmld"])])
+AC_CHECK_LIB([dl],[dlopen],[AC_SUBST([LIBDL],["-ldl"])])
+AC_CHECK_LIB([socket],[socket],[AC_SUBST([LIBSOCKET],["-lsocket"])])
+AC_CHECK_LIB([nsl],[gethostbyname],[AC_SUBST([LIBNSL],["-lnsl"])])
+AC_CHECK_LIB([resolv],[res_init],[AC_SUBST([LIBRESOLV],["-lresolv"])])
+AC_CHECK_LIB([resolv],[__putlong],[AC_SUBST([LIBRESOLV],["-lresolv"])])
+AC_CHECK_LIB([pthread],[pthread_exit],[AC_SUBST([LIBTHREAD],["-lpthread"])])
+AC_CHECK_LIB([rt],[clock_gettime],[AC_SUBST([LIBRT],["-lrt"])])
+AC_CHECK_LIB([posix4],[clock_gettime],[AC_SUBST([LIBRT],["-lposix4"])])
+
+#
+# The header_rewrite module depends on boost.
+AX_BOOST_BASE([1.50],
+  [ AM_CONDITIONAL([BUILD_HAVE_BOOST], [true]) ],
+  [ AM_CONDITIONAL([BUILD_HAVE_BOOST], [false]) ]
+)
+
+#
+# Check for SSL presence and usability
+TS_CHECK_CRYPTO
+if test "x${enable_crypto}" != "xyes"; then
+  AC_MSG_ERROR([Need at least one SSL library, --with-openssl is supported])
+fi
+
+#
+# Check for NextProtocolNegotiation TLS extension support.
+TS_CHECK_CRYPTO_NEXTPROTONEG
+
+#
+# Check for ServerNameIndication TLS extension support.
+TS_CHECK_CRYPTO_SNI
+
+#
+# Check for zlib presence and usability
+TS_CHECK_ZLIB
+
+#
+# Check for lzma presence and usability
+TS_CHECK_LZMA
+
+#
+# Tcl macros provided by build/tcl.m4
+#
+# this will error out if tclConfig.sh is not found
+SC_PATH_TCLCONFIG
+
+# if tclConfig.sh loads properly, assume libraries are there and working
+SC_LOAD_TCLCONFIG
+
+# expect tclConfig.sh to populate TCL_LIB_FLAG and TCL_INCLUDE_SPEC
+case $host_os in
+  darwin*)
+    TCL_LIB_SPEC="-ltcl" # OSX fails to populate this variable
+    ;;
+  *)
+   ;;
+esac
+AC_SUBST([LIBTCL],[$TCL_LIB_SPEC])
+
+case $host_os in
+  freebsd*|kfreebsd*)
+    TS_ADDTO(CPPFLAGS, [-I/usr/local/include])
+    ;;
+esac
+
+if test "x${TCL_INCLUDE_SPEC}" != "x-I/usr/include"; then
+   TS_ADDTO(CPPFLAGS, [$TCL_INCLUDE_SPEC])
+fi
+
+#
+# Check for XML parser
+#
+TS_CHECK_XML
+if test "x${enable_xml}" != "xyes"; then
+  AC_MSG_ERROR([Need at least one XML library, --with-expat is supported])
+fi
+
+TS_FLAG_FUNCS([clock_gettime kqueue epoll_ctl posix_memalign posix_fadvise lrand48_r srand48_r port_create])
+TS_FLAG_FUNCS([strlcpy strlcat])
+
+AC_SUBST(has_clock_gettime)
+AC_SUBST(has_posix_memalign)
+AC_SUBST(has_posix_fadvise)
+AC_SUBST(has_lrand48_r)
+AC_SUBST(has_srand48_r)
+AC_SUBST(has_strlcpy)
+AC_SUBST(has_strlcat)
+
+# Check for eventfd() and sys/eventfd.h (both must exist ...)
+TS_FLAG_HEADERS([sys/eventfd.h], [has_eventfd=1], [has_eventfd=0], [])
+if test "x${has_eventfd}" = "xyes"; then
+  AS_IF([test "x$enable_eventfd" = "xyes"],
+    [TS_FLAG_FUNCS([eventfd])]
+  )
+fi
+AC_SUBST(has_eventfd)
+
+#
+# Check for pcre library
+#
+TS_CHECK_PCRE
+if test "x${enable_pcre}" != "xyes"; then
+  AC_MSG_ERROR([Cannot find pcre library. Configure --with-pcre=DIR])
+fi
+
+has_backtrace=0
+# Check for backtrace() support
+TS_FLAG_HEADERS([execinfo.h], [has_backtrace=1],[])
+if test "${has_backtrace}" = "1"; then
+  # FreeBSD requires '/usr/ports/devel/libexecinfo' for gdb style backtrace() support
+  AC_CHECK_LIB([execinfo], [backtrace], [have_backtrace_lib=yes
+                                         AC_SUBST([LIBEXECINFO],["-lexecinfo"])])
+  if test "x${have_backtrace_lib}" = "xyes"; then
+    AC_MSG_NOTICE([Using backtrace library '-lexecinfo'])
+  fi
+else
+  AC_MSG_WARN([No backtrace() support found])
+fi
+AC_SUBST(execinfoh)
+AC_SUBST(has_backtrace)
+
+use_epoll=0
+use_kqueue=0
+use_port=0
+if test "$ac_cv_func_epoll_ctl" = "yes"; then
+  use_epoll=1
+  have_good_poller=1
+  AC_MSG_NOTICE([Using epoll event interface])
+elif test "$ac_cv_func_kqueue" = "yes"; then
+  use_kqueue=1
+  have_good_poller=1
+  AC_MSG_NOTICE([Using kqueue event interface])
+elif test "$ac_cv_func_port_create" = "yes"; then
+  use_port=1
+  have_good_poller=1
+  AC_MSG_NOTICE([Using port event interface])
+else
+  AC_MSG_FAILURE([No suitable polling interface found])
+fi
+AC_SUBST(use_epoll)
+AC_SUBST(use_kqueue)
+AC_SUBST(use_port)
+
+has_profiler=0
+if test "x${with_profiler}" = "xyes"; then
+  AC_CHECK_LIB([profiler], [ProfilerStart],
+    [AC_SUBST([LIBPROFILER], ["-lprofiler"])
+     has_profiler=1
+    ],
+    [AC_MSG_FAILURE([check for profiler failed. Have you installed google-perftools-devel?])],
+  )
+fi
+AC_SUBST(has_profiler)
+
+has_demangle=0
+# For SunPro 5.2 - we need the demangle symbol for
+#  ink_stack_trace.cc in lib/ts.  Because this
+#  library is part of the SunPro distribution, we need
+#  check with the C++ compiler since we might be using
+#  SunPro CC for the C++ compiler and gcc for the C compiler
+AC_LANG_PUSH([C++])
+AC_CHECK_LIB([demangle],[cplus_demangle],
+  [LIBDEMANGLE="-ldemangle"
+   has_demangle=1
+  ]
+)
+AC_SUBST([LIBDEMANGLE])
+AC_LANG_POP
+AC_SUBST(has_demangle)
+
+need_union_semun=0
+# It's stupid, but not all platforms have union semun, even those that need it.
+AC_MSG_CHECKING(for union semun in sys/sem.h)
+AC_TRY_COMPILE([
+#include <sys/types.h>
+#include <sys/ipc.h>
+#include <sys/sem.h>
+],[
+union semun arg;
+semctl(0, 0, 0, arg);
+], [union_semun=yes]
+msg=yes, [
+need_union_semun="1"
+msg=no ] )
+AC_MSG_RESULT([$msg])
+
+AC_SUBST(need_union_semun)
+
+AC_MSG_CHECKING(for 128bit CAS support)
+AC_LANG_PUSH([C++])
+
+TS_TRY_COMPILE_NO_WARNING([],[
+    __int128_t x = 0;
+    __sync_bool_compare_and_swap(&x,0,10);
+  ], [
+    AC_MSG_RESULT(yes)
+    has_128bit_cas=1
+  ], [
+      dnl If 128bit CAS fails, try again with the -mcx16 option. GCC needs this;
+      dnl clang doesn't; icc is unknown but presumed sane.
+    __saved_CXXFLAGS="${CXXFLAGS}"
+    TS_ADDTO(CXXFLAGS, [-mcx16])
+    TS_TRY_COMPILE_NO_WARNING([],[
+        __int128_t x = 0;
+        __sync_bool_compare_and_swap(&x,0,10);
+      ], [
+        AC_MSG_RESULT(yes)
+        has_128bit_cas=1
+        dnl Keep CFLAGS and CXXFLAGS in sync.
+        TS_ADDTO(CFLAGS, [-mcx16])
+      ], [
+        AC_MSG_RESULT(no)
+        has_128bit_cas=0
+        CXXFLAGS="${__saved_CXXFLAGS}"
+    ])
+])
+
+AC_LANG_POP
+AC_SUBST(has_128bit_cas)
+
+# Check for POSIX capabilities library.
+# If we don't find it, disable checking for header.
+use_posix_cap=0
+AS_IF([test "x$enable_posix_cap" != "xno"],
+  AC_CHECK_LIB([cap],[cap_set_proc],
+    [AC_SUBST([LIBCAP], ["-lcap"])
+     use_posix_cap=1
+    ],[
+     AS_IF([test "x$enable_posix_cap" == "xyes"], [
+      AC_MSG_FAILURE([POSIX capabilities enabled but system library not found.])
+     ],[
+      [enable_posix_cap=no]
+    ]    )
+   ]
+  )
+)
+AC_SUBST(use_posix_cap)
+
+# Check for hwloc library.
+# If we don't find it, disable checking for header.
+use_hwloc=0
+AS_IF([test "x$enable_hwloc" = "xyes"],
+  AC_CHECK_LIB([hwloc],[hwloc_topology_init],
+    [AC_SUBST([LIBHWLOC], ["-lhwloc"])
+     use_hwloc=1
+    ],
+    [enable_hwloc=no]
+  )
+)
+AC_SUBST(use_hwloc)
+
+#
+# Check for tcmalloc and jemalloc
+TS_CHECK_JEMALLOC
+TS_CHECK_TCMALLOC
+
+#
+# Check for libreadline/libedit
+AX_LIB_READLINE
+
+#
+# Check for Lua, at least version 5.1, sets LUA_CFLAGS and LUA_LIBS. We support both standard
+# Lua and LuaJIT, preferring LuaJIT if the user did not indicate a preference.
+AC_MSG_CHECKING([whether to enable Linux LuaJIT support])
+AC_ARG_ENABLE([luajit],
+  [AS_HELP_STRING([--enable-luajit], [enable LuaJIT support @<:@default=check@:>@])],
+  [enable_luajit="${enableval}"],
+  [enable_luajit=check]
+)
+
+PKG_CHECK_MODULES([luajit], [luajit], [have_luajit=yes], [have_luajit=no])
+CHECK_LUA([have_lua=yes], [have_lua=no])
+
+AS_IF([ test "x$enable_luajit" = "xno" ], [
+  # LuaJIT disabled, just check for the regular Lua support.
+  enable_lua_support="${have_lua}"
+], [test "x$enable_luajit" = "xyes"], [
+  # LuaJIT required. Fail if it's not available.
+  AS_IF([ test "x${have_luajit}" = "xyes" ], [
+    LUA_CFLAGS="${luajit_CFLAGS}"
+    LUA_LIBS="${luajit_LIBS}"
+    enable_lua_support=LuaJIT
+  ], [
+    AC_MSG_ERROR([LuaJIT package not available])
+  ])
+], [
+  # No user preference, prefer LuaJIT over standard Lua.
+  AS_IF([ test "x${have_luajit}" = "xyes" ], [
+    LUA_CFLAGS="${luajit_CFLAGS}"
+    LUA_LIBS="${luajit_LIBS}"
+    enable_lua_support=LuaJIT
+  ], [
+    enable_lua_support="${have_lua}"
+  ])
+])
+
+AC_SUBST(LUA_CFLAGS)
+AC_SUBST(LUA_LIBS)
+AC_MSG_CHECKING([whether to enable Lua support])
+AM_CONDITIONAL([BUILD_LUA_SUPPORT], [ test "x${enable_lua_support}" != "xno" ])
+AM_CONDITIONAL([BUILD_HAVE_LUAJIT], [ test "x${have_luajit}" = "xyes" ])
+AC_MSG_RESULT([$enable_lua_support])
+
+# On Darwin LuaJIT requires magic link options, otherwise it will crash in luaL_openlibs() at startup. See
+# http://luajit.org/install.html.
+case $host_os in
+  darwin*)
+    if test "x${have_luajit}" = "xyes"; then
+      LUA_LUAJIT_LDFLAGS="-Wl,-pagezero_size,10000 -Wl,-image_base,100000000"
+    fi
+    ;;
+esac
+
+AC_SUBST(LUA_LUAJIT_LDFLAGS)
+
+# We should be able to build http_load if epoll(2) is available.
+AM_CONDITIONAL([BUILD_HTTP_LOAD], [test x"$ac_cv_func_epoll_ctl" = x"yes"])
+
+# -----------------------------------------------------------------------------
+# 5. CHECK FOR HEADER FILES
+
+TS_FLAG_HEADERS([sys/epoll.h \
+                  sys/event.h \
+                  sys/param.h \
+                  sys/pset.h \
+                  sched.h \
+                  pthread_np.h \
+                  machine/endian.h \
+                  endian.h \
+                  sys/sysinfo.h \
+                  sys/systeminfo.h \
+                  netinet/in.h \
+                  netinet/in_systm.h \
+                  netinet/tcp.h \
+                  sys/ioctl.h \
+                  sys/byteorder.h \
+                  sys/sockio.h \
+                  sys/prctl.h \
+                  arpa/nameser.h \
+                  arpa/nameser_compat.h \
+                  execinfo.h \
+                  netdb.h \
+                  ctype.h \
+                  siginfo.h \
+                  malloc.h \
+                  wait.h \
+                  float.h \
+                  libgen.h \
+                  values.h \
+                  alloca.h \
+                  cpio.h \
+                  stropts.h \
+                  sys/param.h \
+                  sys/sysmacros.h \
+                  math.h \
+                  stdint.h \
+                  stdbool.h \
+                  net/ppp_defs.h \
+                  ifaddrs.h\
+		  readline/readline.h \
+		  editline/readline.h ])
+
+AC_SUBST(sys_epollh)
+AC_SUBST(sys_eventh)
+AC_SUBST(machine_endianh)
+AC_SUBST(endianh)
+AC_SUBST(pthread_nph)
+AC_SUBST(sys_paramh)
+AC_SUBST(sys_cpuseth)
+AC_SUBST(sys_pseth)
+AC_SUBST(schedh)
+AC_SUBST(netinet_inh)
+AC_SUBST(netinet_in_systmh)
+AC_SUBST(netinet_tcph)
+AC_SUBST(sys_ioctlh)
+AC_SUBST(sys_byteorderh)
+AC_SUBST(sys_sockioh)
+AC_SUBST(sys_sysctlh)
+AC_SUBST(sys_sysinfoh)
+AC_SUBST(sys_systeminfoh)
+AC_SUBST(arpa_ineth)
+AC_SUBST(arpa_nameserh)
+AC_SUBST(arpa_nameser_compath)
+AC_SUBST(execinfoh)
+AC_SUBST(netdbh)
+AC_SUBST(ctypeh)
+
+AC_SUBST(siginfoh)
+AC_SUBST(malloch)
+AC_SUBST(waith)
+AC_SUBST(floath)
+AC_SUBST(libgenh)
+AC_SUBST(valuesh)
+AC_SUBST(allocah)
+AC_SUBST(cpioh)
+AC_SUBST(stroptsh)
+AC_SUBST(sys_mounth)
+AC_SUBST(sys_paramh)
+AC_SUBST(sys_sysmacrosh)
+AC_SUBST(mathh)
+AC_SUBST(net_ppp_defsh)
+AC_SUBST(ifaddrsh)
+AC_SUBST(readline_readlineh)
+
+TS_FLAG_HEADERS([sys/sysctl.h], [], [],
+                 [[#ifdef HAVE_SYS_PARAM_H
+                    #include <sys/param.h>
+                   #endif
+                 ]])
+
+TS_FLAG_HEADERS([sys/cpuset.h], [], [],
+                 [[#ifdef HAVE_SYS_PARAM_H
+                    #include <sys/param.h>
+                   #endif
+                 ]])
+
+TS_FLAG_HEADERS([sys/mount.h], [], [],
+                 [[#ifdef HAVE_SYS_PARAM_H
+                    #include <sys/param.h>
+                   #endif
+                 ]])
+
+TS_FLAG_HEADERS([arpa/inet.h], [], [],
+                 [[#ifdef HAVE_SYS_TYPES_H
+                    #include <sys/types.h>
+                   #endif
+                   #ifdef HAVE_NETINET_IN_H
+                    #include <netinet/in.h>
+                   #endif
+                 ]])
+
+TS_FLAG_HEADERS([netinet/ip.h], [], [],
+                 [[#ifdef HAVE_SYS_TYPES_H
+                    #include <sys/types.h>
+                   #endif
+                   #ifdef HAVE_NETINET_IN_H
+                    #include <netinet/in.h>
+                   #endif
+                   #ifdef HAVE_NETINET_IN_SYSTM_H
+                    #include <netinet/in_systm.h>
+                   #endif
+                 ]])
+
+TS_FLAG_HEADERS([netinet/ip_icmp.h], [], [],
+                 [[#ifdef HAVE_SYS_TYPES_H
+                    #include <sys/types.h>
+                   #endif
+                   #ifdef HAVE_NETINET_IN_H
+                    #include <netinet/in.h>
+                   #endif
+                   #ifdef HAVE_NETINET_IP_H
+                    #include <netinet/ip.h>
+                   #endif
+                   #ifdef HAVE_NETINET_IN_SYSTM_H
+                    #include <netinet/in_systm.h>
+                   #endif
+                 ]])
+
+AC_SUBST(netinet_iph)
+AC_SUBST(netinet_ip_icmph)
+
+# BSD-derived systems populate the socket length in the structure itself. It's
+# redundant to check all of these, but hey, I need the typing practice.
+AC_CHECK_MEMBER([struct sockaddr.sa_len], [], [], [#include <netinet/in.h>])
+AC_CHECK_MEMBER([struct sockaddr_in.sin_len], [], [], [#include <netinet/in.h>])
+AC_CHECK_MEMBER([struct sockaddr_in6.sin6_len], [], [], [#include <netinet/in.h>])
+
+if test "x${ac_cv_member_sockaddr_sa_len}" = xyes; then
+    AC_DEFINE(HAVE_STRUCT_SOCKADDR_SA_LEN, 1,
+	    [Whether struct sockaddr_in has the sa_len member])
+fi
+
+if test "x${ac_cv_member_sockaddr_in_sin_len}" = xyes ; then
+AC_DEFINE(HAVE_STRUCT_SOCKADDR_IN_SIN_LEN, 1,
+	    [Whether struct sockaddr_in has the sin_len member])
+fi
+
+if test "x${ac_cv_member_sockaddr_in6_sin6_len}" = xyes; then
+    AC_DEFINE(HAVE_STRUCT_SOCKADDR_IN6_SIN6_LEN, 1,
+	    [Whether struct sockaddr_in6 has the sin6_len member])
+fi
+
+if test "x${with_profiler}" = "xyes"; then
+TS_FLAG_HEADERS([google/profiler.h \
+                  ], [], [])
+fi
+
+if test "x${enable_posix_cap}" != "xno"; then
+  AC_CHECK_HEADERS([sys/capability.h],
+    [],
+    [AC_MSG_FAILURE([Found POSIX capabilities library but not the header sys/capability.h. POSIX capabilities are not a required feature, you can disable then with --disable-posix-cap])],
+    []
+  )
+fi
+
+if test "x${enable_hwloc}" = "xyes"; then
+  AC_CHECK_HEADERS([hwloc.h],
+    [],
+    [AC_MSG_FAILURE([hwloc header not found. Try --disable-hwloc])],
+    []
+  )
+fi
+
+# Check for high-resolution timestamps in struct stat
+AC_CHECK_MEMBERS([struct stat.st_mtimespec.tv_nsec])
+AC_CHECK_MEMBERS([struct stat.st_mtim.tv_nsec])
+
+
+#
+# Configure sockopt value for TPROXY. Look at the enable flag.
+# Value 'no' means user forced disable, don't check anything else.
+#       'auto' means user didn't say, so silently enable/disable
+#              based on success.
+#       A numeric value means enable, don't check, use that value.
+#       Anything else means user forced, fail if value not found
+#       in header file.
+# We can't just include linux/in.h because it's incompatible with
+# netinet/in.h.
+# Verify the file exists (is readable), scan for the value we need,
+# if found export the value and enable use of the value.
+#
+ip_transparent=0
+use_tproxy=0
+tproxy_header=/usr/include/linux/in.h
+tproxy_usage_enable="
+    --enable-tproxy Enable the feature and validate."
+tproxy_usage_default="
+    --enable-tproxy=force Enable using default sockopt value, no validation."
+tproxy_usage_numeric="
+    --enable-tproxy=X where X is numeric
+                      Enable, use X for sockopt value, no validation."
+tproxy_usage_disable="
+    --disable-tproxy Disable feature, no validation."
+proxy_usage="$tproxy_usage_enable$tproxy_usage_default$tproxy_usage_numeric$tproxy_usage_disable"
+
+AC_MSG_CHECKING([whether to enable transparent proxy])
+AS_IF([test "x$enable_tproxy" != "xno"], [
+  AS_IF([test "$use_posix_cap" -eq 0], [
+    AS_IF([test "x$enable_tproxy" = xauto], [
+      AC_MSG_RESULT([no])
+    ],[
+      AC_MSG_FAILURE([TPROXY feature requires POSIX capabilities.])
+    ])
+  ],[
+    AC_MSG_CHECKING([for TPROXY sockopt IP_TRANSPARENT])
+    case "$enable_tproxy" in
+      [[0-9][0-9]*])
+	ip_transparent=$enable_tproxy
+	use_tproxy=1
+	AC_MSG_RESULT([forced to $ip_transparent])
+	;;
+      force)
+	ip_transparent=19
+	use_tproxy=1
+	AC_MSG_RESULT([forced to $ip_transparent])
+	;;
+      yes|auto)
+        AS_IF([test -r $tproxy_header], [
+	  ip_transparent=`$AWK "/^#define[ \t]+IP_TRANSPARENT[ \t]+[0-9]+/{print \\$3}" $tproxy_header`
+	  AS_IF([test "x$ip_transparent" != "x"], [
+	    use_tproxy=1
+	    AC_MSG_RESULT([set to $ip_transparent])
+	  ],[
+	    ip_transparent=0
+	    AS_IF([test "x$enable_tproxy" = xauto], [
+	     AC_MSG_RESULT([no])
+	    ],[
+	      AC_MSG_RESULT([failed])
+	      AC_MSG_FAILURE([tproxy feature enabled but the sockopt value was not found in $tproxy_header. Try one of$tproxy_usage_default$tproxy_usage_numeric$tproxy_usage_disable])
+	    ])
+	  ])
+	],[
+	  AS_IF([test "x$enable_tproxy" = xauto], [
+	    AC_MSG_RESULT([no])
+	  ],[
+	    AC_MSG_RESULT([failed])
+	    AC_MSG_FAILURE([tproxy feature enabled but the header file $tproxy_header was not readable. Try one of$tproxy_usage_default$tproxy_usage_numeric$tproxy_usage_disable])
+	  ])
+	])
+	;;
+      *)
+	AC_MSG_RESULT([failed])
+	AC_MSG_FAILURE([Invalid argument to feature tproxy.$tproxy_usage])
+	;;
+      esac
+  ])
+])
+
+AC_SUBST(use_tproxy)
+AC_SUBST(ip_transparent)
+
+AC_MSG_CHECKING([for SO_MARK])
+AC_TRY_COMPILE([
+#include <sys/socket.h>
+], [
+if( SO_MARK > 0) return 0;
+else return 1;
+], [has_so_mark=1]
+msg=yes, [
+has_so_mark=0
+msg=no ] )
+
+AC_MSG_RESULT([$msg])
+AC_SUBST(has_so_mark)
+
+AC_MSG_CHECKING([for IP_TOS])
+AC_TRY_COMPILE([
+#include <sys/socket.h>
+#include <netinet/in.h>
+#include <netinet/ip.h>
+],[
+if( IP_TOS > 0) return 0;
+else return 1;
+], [has_ip_tos=1]
+msg=yes, [
+has_ip_tos=0
+msg=no ] )
+
+AC_MSG_RESULT([$msg])
+AC_SUBST(has_ip_tos)
+
+TS_CHECK_LOOPBACK_IFACE
+TS_CHECK_GETHOSTBYNAME_R_STYLE
+TS_CHECK_MACRO_IN6_IS_ADDR_UNSPECIFIED
+
+AC_CHECK_TYPE([struct tcp_info],
+  [enable_tcpinfo_plugin=yes],
+  [enable_tcpinfo_plugin=no],
+  [[#include <netinet/tcp.h>]]
+)
+AM_CONDITIONAL([BUILD_TCPINFO_PLUGIN], [ test "x${enable_tcpinfo_plugin}" != "xno" ])
+
+#
+# use modular IOCORE
+#
+iocore_include_dirs="-I\$(top_srcdir)/iocore/eventsystem \
+-I\$(top_srcdir)/iocore/net \
+-I\$(top_srcdir)/iocore/aio \
+-I\$(top_srcdir)/iocore/hostdb \
+-I\$(top_srcdir)/iocore/cache \
+-I\$(top_srcdir)/iocore/cluster \
+-I\$(top_srcdir)/iocore/utils \
+-I\$(top_srcdir)/iocore/dns"
+
+# Testing Framework suffix generation hack
+TFW_PACKAGE_SUFFIX=$os_type
+
+MGMT_DEFS="$MGMT_DEFS -DMGMT_USE_SYSLOG"
+
+AC_MSG_NOTICE([Build using CC=$CC])
+AC_MSG_NOTICE([Build using CXX=$CXX])
+AC_MSG_NOTICE([Build using CPP=$CPP])
+AC_MSG_NOTICE([Build using CFLAGS=$CFLAGS])
+AC_MSG_NOTICE([Build using SHARED_CFLAGS=$SHARED_CFLAGS])
+AC_MSG_NOTICE([Build using CXXFLAGS=$CXXFLAGS])
+AC_MSG_NOTICE([Build using SHARED_CXXFLAGS=$SHARED_CXXFLAGS])
+AC_MSG_NOTICE([Build using SHARED_CXXLINKFLAGS=$SHARED_LINKCXXFLAGS])
+AC_MSG_NOTICE([Build using CPPFLAGS=$CPPFLAGS])
+AC_MSG_NOTICE([Build using LDFLAGS=$LDFLAGS])
+AC_MSG_NOTICE([Build using SHARED_LDFLAGS=$SHARED_LDFLAGS])
+AC_MSG_NOTICE([Build using EXTRA_CC_LDFLAGS=$EXTRA_CC_LDFLAGS])
+AC_MSG_NOTICE([Build using EXTRA_CXX_LDFLAGS=$EXTRA_CXX_LDFLAGS])
+AC_MSG_NOTICE([Build using LIBTOOL_LINK_FLAGS=$LIBTOOL_LINK_FLAGS])
+AC_MSG_NOTICE([Build using MGMT_DEFS=$MGMT_DEFS])
+AC_MSG_NOTICE([Build using API_DEFS=$API_DEFS])
+
+AC_SUBST([API_DEFS])
+AC_SUBST([CC])
+AC_SUBST([CFLAGS])
+AC_SUBST([CXX])
+AC_SUBST([CXXFLAGS])
+AC_SUBST([EXPAT_LDFLAGS])
+AC_SUBST([EXTRA_CC_LDFLAGS])
+AC_SUBST([EXTRA_CXX_LDFLAGS])
+AC_SUBST([LIBTOOL_LINK_FLAGS])
+AC_SUBST([iocore_include_dirs])
+AC_SUBST([LDFLAGS])
+AC_SUBST([MGMT_DEFS])
+AC_SUBST([SHARED_CFLAGS])
+AC_SUBST([SHARED_CXXFLAGS])
+AC_SUBST([SHARED_CXXLINKFLAGS])
+AC_SUBST([SHARED_LDFLAGS])
+AC_SUBST([TFW_PACKAGE_SUFFIX])
+
+# -----------------------------------------------------------------------------
+# 6. OUTPUT FILES
+
+AC_CONFIG_FILES([lib/ts/ink_config.h proxy/api/ts/ts.h])
+AC_CONFIG_FILES([tools/tsxs])
+AC_CONFIG_FILES([doc/Doxyfile])
+AC_CONFIG_FILES([doc/Makefile])
+AC_CONFIG_FILES([rc/Makefile])
+AC_CONFIG_FILES([rc/trafficserver])
+AC_CONFIG_FILES([rc/trafficserver.xml])
+AC_CONFIG_FILES([rc/trafficserver.conf])
+AC_CONFIG_FILES([rc/trafficserver.service])
+AC_CONFIG_FILES([iocore/aio/Makefile])
+AC_CONFIG_FILES([iocore/cache/Makefile])
+AC_CONFIG_FILES([iocore/cluster/Makefile])
+AC_CONFIG_FILES([iocore/dns/Makefile])
+AC_CONFIG_FILES([iocore/eventsystem/Makefile])
+AC_CONFIG_FILES([iocore/hostdb/Makefile])
+AC_CONFIG_FILES([iocore/Makefile])
+AC_CONFIG_FILES([iocore/net/Makefile])
+AC_CONFIG_FILES([iocore/utils/Makefile])
+AC_CONFIG_FILES([lib/Makefile])
+AC_CONFIG_FILES([lib/ts/Makefile])
+AC_CONFIG_FILES([lib/records/Makefile])
+AC_CONFIG_FILES([lib/cpp11api/Makefile])
+AC_CONFIG_FILES([lib/tsconfig/Makefile])
+AC_CONFIG_FILES([Makefile])
+AC_CONFIG_FILES([proxy/config/body_factory/default/Makefile])
+AC_CONFIG_FILES([proxy/config/body_factory/Makefile])
+AC_CONFIG_FILES([proxy/config/records.config.default proxy/config/storage.config.default])
+AC_CONFIG_FILES([proxy/config/Makefile])
+AC_CONFIG_FILES([proxy/congest/Makefile])
+AC_CONFIG_FILES([proxy/hdrs/Makefile])
+AC_CONFIG_FILES([proxy/http/Makefile])
+AC_CONFIG_FILES([proxy/http/remap/Makefile])
+AC_CONFIG_FILES([proxy/logging/Makefile])
+AC_CONFIG_FILES([proxy/Makefile])
+AC_CONFIG_FILES([mgmt/api/Makefile])
+AC_CONFIG_FILES([mgmt/api/remote/Makefile])
+AC_CONFIG_FILES([mgmt/api/include/Makefile])
+AC_CONFIG_FILES([mgmt/cli/Makefile])
+AC_CONFIG_FILES([mgmt/cluster/Makefile])
+AC_CONFIG_FILES([mgmt/Makefile])
+AC_CONFIG_FILES([mgmt/preparse/Makefile])
+AC_CONFIG_FILES([mgmt/stats/Makefile])
+AC_CONFIG_FILES([mgmt/tools/Makefile])
+AC_CONFIG_FILES([mgmt/utils/Makefile])
+AC_CONFIG_FILES([mgmt/web2/Makefile])
+AC_CONFIG_FILES([lib/wccp/Makefile])
+AC_CONFIG_FILES([proxy/api/ts/Makefile])
+# Traffic Cop
+AC_CONFIG_FILES([cop/Makefile])
+# production plugins
+AC_CONFIG_FILES([plugins/Makefile])
+AC_CONFIG_FILES([plugins/conf_remap/Makefile])
+AC_CONFIG_FILES([plugins/regex_remap/Makefile])
+AC_CONFIG_FILES([plugins/header_filter/Makefile])
+AC_CONFIG_FILES([plugins/stats_over_http/Makefile])
+# experimental plugins
+AC_CONFIG_FILES([plugins/experimental/Makefile])
+AC_CONFIG_FILES([plugins/experimental/esi/Makefile])
+AC_CONFIG_FILES([plugins/experimental/lua/Makefile])
+AC_CONFIG_FILES([plugins/experimental/rfc5861/Makefile])
+AC_CONFIG_FILES([plugins/experimental/tcp_info/Makefile])
+AC_CONFIG_FILES([plugins/experimental/custom_redirect/Makefile])
+AC_CONFIG_FILES([plugins/experimental/header_rewrite/Makefile])
+AC_CONFIG_FILES([plugins/experimental/metalink/Makefile])
+AC_CONFIG_FILES([plugins/experimental/gzip/Makefile])
+AC_CONFIG_FILES([plugins/experimental/spdy/Makefile])
+AC_CONFIG_FILES([plugins/experimental/channel_stats/Makefile])
+AC_CONFIG_FILES([plugins/experimental/authproxy/Makefile])
+AC_CONFIG_FILES([plugins/experimental/cacheurl/Makefile])
+# various tools
+AC_CONFIG_FILES([tools/Makefile])
+# example plugins
+AC_CONFIG_FILES([example/Makefile])
+
+# -----------------------------------------------------------------------------
+# 7. autoheader TEMPLATES
+
+AC_OUTPUT
diff --git a/contrib/manifests/debian.pp b/contrib/manifests/debian.pp
index db5873e..c127e8e 100644
--- a/contrib/manifests/debian.pp
+++ b/contrib/manifests/debian.pp
@@ -19,6 +19,8 @@ package {[
     'gcc', 'g++', 'automake', 'autoconf', 'libtool', 'pkg-config',
     'libssl-dev', 'tcl-dev', 'libexpat1-dev', 'libpcre3-dev',
     'libcap-dev', 'libcap2', 'bison', 'flex', 'make',
+    'libcurl3-dev', 'libncurses5-dev',
+
   ]:
   ensure => latest
 }
diff --git a/contrib/manifests/redhat.pp b/contrib/manifests/redhat.pp
index 956c5d7..bd1bd55 100644
--- a/contrib/manifests/redhat.pp
+++ b/contrib/manifests/redhat.pp
@@ -16,9 +16,10 @@
 
 # Base ATS build dependencies.
 package {[
-    'gcc', 'automake', 'autoconf', 'libtool',
+    'gcc', 'automake', 'autoconf', 'libtool', 'pkgconfig',
     'openssl-devel', 'tcl-devel', 'expat-devel', 'pcre-devel',
     'libcap-devel', 'bison', 'flex', 'make',
+    'ncurses-devel', 'libcurl-devel',
   ]:
   ensure => latest
 }
diff --git a/tools/Makefile.am b/tools/Makefile.am
index e9e50ba..ad2e901 100644
--- a/tools/Makefile.am
+++ b/tools/Makefile.am
@@ -18,7 +18,7 @@
 #  limitations under the License.
 
 bin_SCRIPTS = tsxs
-
+bin_PROGRAMS =
 noinst_PROGRAMS = jtest/jtest
 
 jtest_jtest_SOURCES = jtest/jtest.cc
@@ -34,3 +34,21 @@ http_load_http_load_SOURCES =  \
   http_load/timers.h
 
 endif
+
+# We only build tstop if libcurses and libcurl are available.
+if BUILD_TSTOP
+
+bin_PROGRAMS += tstop/tstop
+
+tstop_tstop_CPPFLAGS = \
+  -I$(top_srcdir)/mgmt/api/include
+tstop_tstop_CXXFLAGS = \
+  @CURL_CFLAGS@
+
+tstop_tstop_SOURCES = tstop/tstop.cc
+tstop_tstop_LDADD = \
+  $(top_builddir)/mgmt/api/remote/libtsmgmt.la \
+  @CURL_LIBS@ \
+  @CURSES_LIB@
+
+endif
diff --git a/tools/tstop/Makefile b/tools/tstop/Makefile
deleted file mode 100644
index 6b9a7e6..0000000
--- a/tools/tstop/Makefile
+++ /dev/null
@@ -1,5 +0,0 @@
-all: tstop.cc
-	$(CXX) $^ -o tstop -lcurl -lcurses -g -ltsutil -ltsmgmt -ltsutil -lpthread -Wl,-rpath,/usr/local/lib
-
-clean:
-	rm -f tstop
diff --git a/tools/tstop/stats.h b/tools/tstop/stats.h
index 8e535bc..35295c8 100644
--- a/tools/tstop/stats.h
+++ b/tools/tstop/stats.h
@@ -21,15 +21,16 @@
     limitations under the License.
 */
 
+#define __STDC_FORMAT_MACROS 1
+
 #include <curl/curl.h>
 #include <map>
 #include <string>
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
-//#include <ts/ts.h>
 #include <inttypes.h>
-#include <ts/mgmtapi.h>
+#include "mgmtapi.h"
 
 using namespace std;
 
@@ -111,7 +112,7 @@ public:
     lookup_table.insert(make_pair("ram_ratio", LookupItem("Ram Hit", "ram_hit", "ram_hit_miss", 4)));
     lookup_table.insert(make_pair("dns_ratio", LookupItem("DNS Hit", "dns_hits", "dns_lookups", 4)));
 
-    // percetage of requests
+    // percentage of requests
     lookup_table.insert(make_pair("fresh", LookupItem("Fresh", "proxy.process.http.transaction_counts.hit_fresh", 5)));
     lookup_table.insert(make_pair("reval", LookupItem("Revalidate", "proxy.process.http.transaction_counts.hit_revalidated", 5)));
     lookup_table.insert(make_pair("cold", LookupItem("Cold", "proxy.process.http.transaction_counts.miss_cold", 5)));
@@ -169,7 +170,7 @@ public:
   void getStats() {
 
     if (_host == "") {
-      int64_t value;
+      int64_t value = 0;
       if (_old_stats != NULL) {
         delete _old_stats;
         _old_stats = NULL;
@@ -195,7 +196,7 @@ public:
             assert(TSRecordGetInt(item.name, &value) == TS_ERR_OKAY);
             string key = item.name;
             char buffer[32];
-            sprintf(buffer, "%lld", value);
+            sprintf(buffer, "%" PRId64, value);
             string foo = buffer;
             (*_stats)[key] = foo;
           }
@@ -324,7 +325,7 @@ public:
     }
 
     if (type == 5) {
-      double denominator;
+      double denominator = 0;
       getStat("client_req", denominator);
       if (denominator == 0)
         value = 0;
diff --git a/tools/tstop/tstop.cc b/tools/tstop/tstop.cc
index d368530..ff7f93e 100644
--- a/tools/tstop/tstop.cc
+++ b/tools/tstop/tstop.cc
@@ -20,23 +20,38 @@
     See the License for the specific language governing permissions and
     limitations under the License.
 */
-#include <ncurses.h>
+
+#include "ink_config.h"
+#include <map>
 #include <list>
-#include <string.h>
 #include <string>
+#include <string.h>
 #include <iostream>
 #include <assert.h>
-#include <map>
 #include <stdlib.h>
-#include "stats.h"
 #include <unistd.h>
 #include <getopt.h>
 
+#if defined HAVE_NCURSESW_CURSES_H
+#  include <ncursesw/curses.h>
+#elif defined HAVE_NCURSESW_H
+#  include <ncursesw.h>
+#elif defined HAVE_NCURSES_CURSES_H
+#  include <ncurses/curses.h>
+#elif defined HAVE_NCURSES_H
+#  include <ncurses.h>
+#elif defined HAVE_CURSES_H
+#  include <curses.h>
+#else
+#  error "SysV or X/Open-compatible Curses header file required"
+#endif
+
+#include "stats.h"
+
 using namespace std;
 char curl_error[CURL_ERROR_SIZE];
 string response;
 
-
 namespace colorPair {
   const short red = 1;
   const short yellow = 2;
@@ -48,29 +63,8 @@ namespace colorPair {
   const short border = 8;
 };
 
-
 //----------------------------------------------------------------------------
-int printGraphLabels(int x, int y, int width, list<const char*> lables) {
-  char buffer[256];
-  for (list<const char*>::const_iterator it = lables.begin();
-       it != lables.end(); ++it) {
-
-    char *pos = buffer;
-    pos += snprintf(buffer, 256, "%7s [", *it);
-    memset(pos, ' ', width);
-    pos += width - 1;
-    
-    strncat(pos, "]", buffer - pos);
-    
-    mvprintw(y++, x, buffer);
-  }
-  
-  //  mvprintw(x, y, 
-}
-
-
-//----------------------------------------------------------------------------
-void prettyPrint(const int x, const int y, const double number, const int type) {
+static void prettyPrint(const int x, const int y, const double number, const int type) {
   char buffer[32];
   char exp = ' ';
   double my_number = number;
@@ -120,12 +114,12 @@ void prettyPrint(const int x, const int y, const double number, const int type)
 }
 
 //----------------------------------------------------------------------------
-void makeTable(const int x, const int y, const list<string> &items, Stats &stats) {
+static void makeTable(const int x, const int y, const list<string> &items, Stats &stats) {
   int my_y = y;
 
   for (list<string>::const_iterator it = items.begin(); it != items.end(); ++it) {
     string prettyName;
-    double value;
+    double value = 0;
     int type;
 
     stats.getStat(*it, value, prettyName, type);
@@ -135,7 +129,7 @@ void makeTable(const int x, const int y, const list<string> &items, Stats &stats
 }
 
 //----------------------------------------------------------------------------
-size_t write_data(void *ptr, size_t size, size_t nmemb, void *stream)
+size_t write_data(void *ptr, size_t size, size_t nmemb, void * /* stream */)
 {
   response.append((char*)ptr, size * nmemb);
   //cout << "appending: " << size * nmemb << endl;
@@ -144,7 +138,7 @@ size_t write_data(void *ptr, size_t size, size_t nmemb, void *stream)
 }
 
 //----------------------------------------------------------------------------
-void help(const string &host, const string &version) {
+static void help(const string &host, const string &version) {
 
   timeout(1000);
 
@@ -179,7 +173,7 @@ void help(const string &host, const string &version) {
   }
 }
 
-void usage(char **argv) {
+static void usage(char **argv) {
   fprintf(stderr, "Usage: %s [-s seconds] hostname|hostname:port\n", argv[0]);
   exit(1);
 }
@@ -359,7 +353,7 @@ int main(int argc, char **argv)
     curs_set(0);
     refresh();
     timeout(sleep_time);
-  loop:
+
     int x = getch();
     if (x == 'q')
       break;
