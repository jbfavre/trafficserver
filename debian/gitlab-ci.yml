stages:
  - build
  - lintian
  - piuparts
  - reprotest

.build: &build
  before_script:
  - apt-get update
  - apt-get -qy upgrade
  - apt-get -qy install devscripts autoconf automake adduser fakeroot sudo
  - mk-build-deps -t "apt-get -y -o Debug::pkgProblemResolver=yes --no-install-recommends" -i -r
  - adduser --disabled-password --gecos "" builduser
  - chown -R builduser:builduser .
  - chown builduser:builduser ..
  stage: build
  script:
  - sudo -u builduser dpkg-buildpackage -b -rfakeroot

.lintian: &lintian
  before_script:
  - apt-get update
  - apt-get -y install lintian
  stage: lintian
  script:
  - echo "performing general and experimental lintian checks"
  - lintian --color always -EviIL +pedantic built/*.changes || true
  - echo "performing ftp-master-rejects lintian checks"
  - lintian --color always -viF built/*.changes

build:testing:
  <<: *build
  image: debian:testing

build:unstable:
  <<: *build
  image: debian:sid
  artifacts:
    paths:
    - built
  after_script:
  - mkdir built
  - dcmd mv ../*ges built/

lintian:unstable:
  <<: *lintian
  dependencies:
  - build:unstable
  image: debian:sid

piuparts:unstable:
  stage: piuparts
  image: registry.salsa.debian.org/salsa-ci-team/images/piuparts
  services:
    - docker:dind
  script:
    - CHROOT_PATH=/tmp/trafficserver-debian-unstable
    - CONTAINER_ID=$(docker run --rm -d debian:unstable sleep infinity)
    - docker exec ${CONTAINER_ID} bash -c "apt-get update && apt-get -qy dist-upgrade && apt-get -qy install eatmydata"
    - mkdir -p ${CHROOT_PATH}
    - docker export ${CONTAINER_ID} | tar -C ${CHROOT_PATH} -xf -
    - mknod -m 666 ${CHROOT_PATH}/dev/urandom c 1 9
    - ls -l /usr/bin/chage
    - piuparts --hard-link -e ${CHROOT_PATH} built/*.changes

reprotest:unstable:
  stage: reprotest
  image: registry.salsa.debian.org/salsa-ci-team/images/reprotest
  before_script:
    - apt-get update
    - apt-get -qy dist-upgrade
    - eatmydata apt-get build-dep -y .
  artifacts:
    name: "$CI_BUILD_NAME"
    expire_in: 180 day
    paths:
      - ./reprotest.log
    when: always
  script:
    - export DEB_BUILD_OPTIONS=nocheck
    - eatmydata reprotest --no-diffoscope --min-cpus $(nproc --all) . -- null &> reprotest.log
